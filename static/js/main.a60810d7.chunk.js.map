{"version":3,"sources":["Cards/utils/translate.js","config.js","Cards/NestedLinks.js","Cards/utils/shorten.js","Cards/NestedProperties.js","Cards/Card.js","MGraph/MGraph.js","components/graphHelpers.js","components/GraphComponent.js","SideBar/AppSideBar.js","App.js","serviceWorker.js","index.js"],"names":["tranlate_word","word","language","ru","cardConfig","KgMinjust","label","style","backgroundColor","icon","fontSize","svg","subHeaderUrlParam","subHeaderText","contentTextParam","properties","links","reverseLinks","KgMinjustParticipants","HeadNameSur","KgProcurementParticipants","KgProcurementLots","KgProcurement","KgProcurementEntitiesWithAddresses","relationshipConfig","CONTROLS","linkConf","ANNOUNCED","DIRECTOR","INCLUDES_LOTS","NAME_SAKE","NAME_SAKE_INDIVIDUAL","PROBABLE_FATHER","PARTICIPATED_IN","value","regex","color","PROBABLE_SIBLING","PROBABLE_KID","SAME_INN","useStyles","makeStyles","theme","root","palette","background","paper","padding","nested","paddingLeft","spacing","listItemIcon","minWidth","React","memo","props","classes","useState","iEdges","vGraph","toJS","nodes","edges","iGraph","listOfRelationships","Object","keys","map","key","node","id","toString","source","target","type","reduce","obj","relation","object","labels","listOfLinks","includes","filter","element","undefined","getKeyRelationshipIds","newKey","length","ListItem","button","onClick","onButtonClick","ListItemText","primary","translate","primaryTypographyProps","variant","ListItemIcon","className","List","component","aria-labelledby","prevProps","nextProps","shorten","phrase","RegExp","replace","fontWeight","marginBottom","listOfProps","forEach","prop","push","Typography","console","log","maxWidth","textAlign","height","media","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","red","cardContent","paddingTop","paddingBottom","subheader","href","Card","CardHeader","Avatar","aria-label","action","IconButton","onMinimizeClick","CardContent","Divider","marginTop","window","innerHeight","windowHeight","setWindowHeight","innerWidth","windowWidth","setWindowWidth","useEffect","handleResize","addEventListener","removeEventListener","myConfig","width","labelProperty","link","highlightColor","renderLabel","config","data","dispGraph","values","visibleGraph","cardNodeIds","size","dispLabel","viewGenerator","n","invisibleGraph","CardConfig","clearLink","result","conf","toLowerCase","substring","displayGraph","onDoubleClickNode","nodeId","onNodeClick","toGraph","graph","records","i","nodge","get","hasOwnProperty","identity","low","start","end","reconcileGraphs","GraphComponent","driver","neo4j","state","Immutable","fromJS","showSpinner","showSmallSpinner","clearGraphs","setState","goClick","query","executeQuery","cypherQuery","session","run","then","updatedVisibleGraph","gh","paramIDs","updateInvisible","catch","error","close","invisibleSession","updatedInvisibleGraph","mergeGraphs","ids","removeElements","innocentNodes","findNodes","nodeToRemove","String","handleButtonClick","every","el","removeFromArray","idIndex","indexOf","parseInt","splice","addToArray","handleMinimezeClick","handleNodeClick","returnSpinner","position","top","left","CircularProgress","returnSmallSpinner","Grid","container","alignContent","direction","right","paddingRight","Box","isGoClick","this","isClearGraph","clearClick","edgeIds","foundNodes","nodeKey","edgeId","Component","display","appBar","boxShadow","easing","sharp","leavingScreen","appBarShift","easeOut","enteringScreen","menuButton","marginRight","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","mixins","toolbar","justifyContent","content","flexGrow","contentShift","searchBar","border","borderRadius","PersistentDrawerLeft","useTheme","open","setOpen","CssBaseline","AppBar","clsx","Toolbar","edge","TextField","searchText","onChange","handleSearchTextChange","placeholder","onKeyPress","event","handleGoClick","InputProps","disableUnderline","inputProps","Tooltip","title","handleResetClick","handleClearClick","Drawer","anchor","text","index","multiline","handleCypherQueryTextChange","Button","GoButton","startIcon","children","axios","require","default","App","clearGraph","listOfNodes","showPagination","handlePaginationChange","join","fetchData","urlString","url","params","token","response","message","returnPagination","justify","bottom","WebkitTransform","Pagination","count","showFirstButton","showLastButton","queryString","parse","location","search","decode","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a60810d7.chunk.js","sourcesContent":["import ru from './translationFiles/ru.json'\n\nconst tranlate_word = (word, language) => {\n    if (word in ru) {\n        if (language == 'ru') {\n            return ru[word]\n    }}\n    else {\n        return word\n    }      \n}\n\nexport default tranlate_word;","import React from 'react'\nimport BusinessIcon from '@material-ui/icons/Business';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport GavelIcon from '@material-ui/icons/Gavel';\nimport AccountBalanceIcon from '@material-ui/icons/AccountBalance';\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\n\n\nconst cardConfig = {\n    KgMinjust: {\n        label: 'KgMinjust',\n        style: {backgroundColor: '#fbc02d'},\n        icon: <BusinessIcon  style={{ fontSize: 30 }}/>,\n        svg: 'https://raw.githubusercontent.com/aleks-walker/graph-montecristo-config/8f8c6843a73515bd2deb47f4b80b8cdf9c0d2451/businessYellow.svg',\n        subHeaderUrlParam: 'url',\n        subHeaderText: 'Минюст',\n        contentTextParam: 'name_ru',\n        properties: ['name_ru', 'inn', 'head_name_sur', 'street'],\n        links: ['CONTROLS', 'DIRECTOR', 'SAME_INN'],\n        reverseLinks: {}\n    },\n    KgMinjustParticipants: {\n        label: 'KgMinjustParticipants',\n        style: {backgroundColor: '#fbc02d'},\n        icon: <AccountCircleIcon style={{ fontSize: 30 }}/>,\n        svg: 'https://raw.githubusercontent.com/aleks-walker/graph-montecristo-config/8f8c6843a73515bd2deb47f4b80b8cdf9c0d2451/accountYellow.svg',\n        subHeaderUrlParam: 'org_url',\n        subHeaderText: 'Минюст',\n        contentTextParam: 'name',\n        properties: ['name'],\n        links: ['CONTROLS', 'NAME_SAKE', 'PROBABLE_FATHER', 'PROBABLE_SIBLING', 'PROBABLE_KID'],\n        reverseLinks: {}\n    },\n    HeadNameSur: {\n        label: 'HeadNameSur',\n        style: {backgroundColor: '#fbc02d'},\n        icon: <AccountCircleIcon  style={{ fontSize: 30 }}/>,\n        svg:  'https://raw.githubusercontent.com/aleks-walker/graph-montecristo-config/8f8c6843a73515bd2deb47f4b80b8cdf9c0d2451/accountYellow.svg',\n        subHeaderUrlParam: '',\n        subHeaderText: 'Минюст',\n        contentTextParam: 'head_name_sur',\n        properties: ['head_name_sur'],\n        links: ['DIRECTOR', 'NAME_SAKE', 'PROBABLE_FATHER', 'PROBABLE_SIBLING', 'PROBABLE_KID'],\n        reverseLinks: {}\n    },\n    KgProcurementParticipants: {\n        label: 'KgProcurementParticipants',\n        style: {backgroundColor: '#00897b'},\n        icon: <BusinessIcon style={{ fontSize: 30 }}/>,\n        svg: 'https://raw.githubusercontent.com/aleks-walker/graph-montecristo-config/8f8c6843a73515bd2deb47f4b80b8cdf9c0d2451/busiessGreen.svg',\n        subHeaderUrlParam: '',\n        subHeaderText: 'Гос. закупки',\n        contentTextParam: 'name',\n        properties: ['inn'],\n        links: ['PARTICIPATED_IN', 'NAME_SAKE_INDIVIDUAL'],\n        reverseLinks: {}\n    }, \n    KgProcurementLots: {\n        label: 'KgProcurementLots',\n        style: {backgroundColor: '#00897b'},\n        icon: <GavelIcon style={{ fontSize: 30 }}/>,\n        svg:  'https://raw.githubusercontent.com/aleks-walker/graph-montecristo-config/8f8c6843a73515bd2deb47f4b80b8cdf9c0d2451/gavelGreen.svg',\n        subHeaderUrlParam: 'tender_url',\n        subHeaderText: 'Гос. закупки',\n        contentTextParam: 'lot_name',\n        properties: ['lot_name'],\n        links: ['PARTICIPATED_IN', 'INCLUDES_LOTS'],\n        reverseLinks: {'PARTICIPATED_IN':'PARTICIPANTS',\n                        'INCLUDES_LOTS': 'TENDER'}\n    },\n    KgProcurement: {\n        label: 'KgProcurement',\n        style: {backgroundColor: '#00897b'},\n        icon: <MonetizationOnIcon style={{ fontSize: 30 }}/>,\n        svg:  'https://raw.githubusercontent.com/aleks-walker/graph-montecristo-config/13c35330a9b7ae752e04638edb39068555ae9374/monetizeGreen.svg',\n        subHeaderUrlParam: 'url',\n        subHeaderText: 'Тендер',\n        contentTextParam: 'procurement_object_no_quotes',\n        properties: ['procurement_method'],\n        links: ['ANNOUNCED', 'INCLUDES_LOTS'],\n        reverseLinks: {'ANNOUNCED':'ENTITY'}\n    },\n    KgProcurementEntitiesWithAddresses: {\n        label: 'KgProcurementEntitiesWithAddresses',\n        style: {backgroundColor: '#00897b'},\n        icon: <AccountBalanceIcon style={{ fontSize: 30 }}/>,\n        svg:  'https://raw.githubusercontent.com/aleks-walker/graph-montecristo-config/83020b7357a5888d237b3661800fec934f692be8/orgTenderGreen.svg',\n        subHeaderUrlParam: '',\n        subHeaderText: 'Закупающая организация',\n        contentTextParam: 'procuring_entity', \n        properties: ['district'],\n        links: ['ANNOUNCED'],\n        reverseLinks: {}\n    }\n}\n\nexport default cardConfig\n\n\nexport const relationshipConfig = {\n    \n    CONTROLS: {\n        properties: [],\n        linkConf: {'fontSize' : 14}\n    },\n    ANNOUNCED: {\n        properties: [],\n        linkConf: {'fontSize' : 14}\n    },\n    DIRECTOR: {\n        properties: [],\n        linkConf: {'fontSize' : 14}\n    },\n    INCLUDES_LOTS: {\n        properties: [],\n        linkConf: {'fontSize' : 14}\n    },\n    NAME_SAKE: {\n        properties: [],\n        linkConf: {'fontSize' : 14}\n    },\n    NAME_SAKE_INDIVIDUAL: {\n        properties: [],\n        linkConf: {'fontSize' : 14}\n    },\n    PROBABLE_FATHER: {\n        properties: [],\n        linkConf: {'fontSize' : 14}\n    },\n    PARTICIPATED_IN: {\n        properties: ['proposed_price', 'result'],\n        'result': [{\n            value: '(Подтверждено)',\n            regex: true,\n            color: \"red\"\n        }],\n        linkConf: {'fontSize' : 14}\n    },\n    PROBABLE_SIBLING: {\n        properties: [],\n        linkConf: {'fontSize' : 14}\n    },\n    PROBABLE_KID: {\n        properties: [],\n        linkConf: {'fontSize' : 14}\n    },\n    SAME_INN: {\n        properties: [],\n        linkConf: {'fontSize' : 14}\n    },\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Collapse from '@material-ui/core/Collapse';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport DraftsIcon from '@material-ui/icons/Drafts';\nimport SendIcon from '@material-ui/icons/Send';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport StarBorder from '@material-ui/icons/StarBorder';\n\nimport BubbleChartIcon from '@material-ui/icons/BubbleChart';\nimport AccountTreeIcon from '@material-ui/icons/AccountTree';\n\nimport translate from './utils/translate'\nimport cardConfig from '../config'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n    padding: '1px',\n  },\n  nested: {\n    paddingLeft: theme.spacing(4),\n    padding: '1px'\n  },\n  listItemIcon: {\n    minWidth: 'auto'\n  }\n}));\n\nconst NestedLinks = (props) => {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n\n  const handleClick = () => {\n    setOpen(!open);\n  };\n\n  // console.log(props.node)\n  // console.log(props.vGraph.toJS())\n  // console.log(props.iGraph.toJS()) \n\n  const vNodes = props.vGraph.toJS().nodes\n  const vEdges = props.vGraph.toJS().edges\n\n  const iNodes = props.iGraph.toJS().nodes\n  const iEdges = props.iGraph.toJS().edges\n  \n\n  let listOfRelationships = Object.keys(iEdges).map((key) => {\n    if (props.node.id.toString() == iEdges[key].source.toString() || props.node.id.toString() == iEdges[key].target.toString()){\n      return iEdges[key].type\n    }\n  }).reduce(function(obj, relation){\n      if (!obj[relation]) {\n          obj[relation] = 1;\n      } else {\n          obj[relation]++;\n      }\n      return obj;\n  }, {});\n\n   //Delete 'undefined' in listOfRelationships\n   listOfRelationships = Object.keys(listOfRelationships).reduce((object, key) => {\n    if (key !== 'undefined') {\n      object[key] = listOfRelationships[key]\n    }\n    return object\n  }, {})\n \n  const getKeyRelationshipIds = (type) => {\n    let keys = Object.keys(iEdges).map((key) => {\n      if ((iEdges[key].type == type) && (props.node.id.toString() == iEdges[key].source.toString() || props.node.id.toString() == iEdges[key].target.toString())){\n        return key\n      }\n    })\n\n    keys = keys.filter(function( element ) {\n      return element !== undefined;\n    });\n\n    return keys\n  };\n\n  const label = props.node.labels[0]\n\n  let listOfLinks = Object.keys(listOfRelationships).map((key) => {\n    if (cardConfig[label] \n        && cardConfig[label].links \n        && cardConfig[label].links.includes(key)) {\n      const keys = getKeyRelationshipIds(key)\n\n      let newKey = ''\n\n      // if node.reverseLinks AND key in reverseLinks: \n      \n      if (Object.keys(cardConfig[label].reverseLinks).length !== 0 && Object.keys(cardConfig[label].reverseLinks).includes(key)) {\n        newKey = cardConfig[label].reverseLinks[key]\n        //console.log(\"1 LIST OF RELS:\", listOfRelationships, \"| KEY:\", key, \"| NODE: \", label)\n        //console.log(\"2 KEY: \", key, \"| NEW KEY:\", newKey, \"| reverseLinks: \", cardConfig[label].reverseLinks)\n      }\n      else {\n        newKey = key\n      }\n  \n          \n      return(\n        <ListItem style={{padding: '1px'}} button onClick={() => props.onButtonClick(keys)}>          \n          <ListItemText primary={translate(newKey, 'ru') + ' (' + listOfRelationships[key] + ')'} primaryTypographyProps={{variant:\"body2\"}} />\n          <ListItemIcon className={classes.listItemIcon}>\n            <AccountTreeIcon />\n          </ListItemIcon>\n        </ListItem>)\n    }\n  })\n\n\n  return (\n    <List\n      component=\"nav\"\n      aria-labelledby=\"nested-list-subheader\"\n      className={classes.root}\n    >\n      {listOfLinks}\n    </List>\n  );\n}\n\nconst areEqual = (prevProps, nextProps) => {\n  return ((prevProps.vGraph === nextProps.vGraph) && \n          (prevProps.iGraph === nextProps.iGraph) &&\n          (prevProps.node === nextProps.node));\n}\n\nexport default React.memo(NestedLinks, areEqual);","const shorten = (phrase) => {\n  const regex = new RegExp(\"общество с ограниченной ответственностью\", \"i\")\n  return phrase.replace(regex, \"ОсОО\")\n}\n\nexport default shorten;","import React from 'react'\nimport Typography from '@material-ui/core/Typography';\nimport cardConfig from '../config'\nimport shorten from './utils/shorten'\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    contentTextParam: {\n        fontWeight: \"bold\",\n        marginBottom: \"5px\"\n    }\n}));\n\nconst NestedProperties = (props) => {\n    const classes = useStyles();\n    let listOfProps = []\n    const label = props.node.labels[0]\n    if (Object.keys(cardConfig).includes(label)) {\n        cardConfig[label].properties.forEach(prop => {\n        if (cardConfig[label].properties \n                && cardConfig[label].properties.includes(prop)\n                && cardConfig[label].contentTextParam !== prop) {\n            listOfProps.push(\n                <Typography variant=\"body2\" color=\"textPrimary\" component=\"p\">\n                    { props.node.properties[prop] }\n                </Typography>\n            )\n        }\n        });\n    }\n    console.log( props.node.properties[cardConfig[label].contentTextParam] )\n    return (\n        <div>\n            <Typography className={classes.contentTextParam} variant=\"body2\" color=\"textPrimary\" component=\"p\" >\n                { shorten(props.node.properties[cardConfig[label].contentTextParam]) }\n            </Typography>\n        {listOfProps}\n        </div>\n    )\n}\nconst areEqual = (prevProps, nextProps) => {\n  return (prevProps.node.properties === nextProps.node.properties)\n}\n\nexport default React.memo(NestedProperties, areEqual);","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\n\nimport MinimizeIcon from '@material-ui/icons/Minimize';\nimport Divider from '@material-ui/core/Divider'\n\nimport NestedLinks from './NestedLinks'\nimport NestedProperties from './NestedProperties'\nimport cardConfig from '../config'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      maxWidth: 240,\n      textAlign: \"left\",\n      height : \"auto\"\n    },\n    media: {\n      height: 0,\n      // paddingTop: '56.25%', // 16:9\n    },\n    expand: {\n      transform: 'rotate(0deg)',\n      marginLeft: 'auto',\n      transition: theme.transitions.create('transform', {\n        duration: theme.transitions.duration.shortest,\n      }),\n    },\n    expandOpen: {\n      transform: 'rotate(180deg)',\n    },\n    avatar: {\n      backgroundColor: red[500],\n    },\n    cardContent: {\n      paddingTop: 0,\n      paddingBottom: 0,\n      \"&:last-child\": {\n        paddingBottom: 7\n      }\n    },\n  }));\n\n  const RecipeReviewCard = (props) => {\n    const classes = useStyles();\n\n    let style = {}\n    let avatar = ''\n    let subheader = ''\n    if (Object.keys(cardConfig).includes(props.node.labels[0])) {\n      const label = props.node.labels[0]\n      style = cardConfig[label].style \n      avatar = cardConfig[label].icon \n      subheader =\n        <a \n          href={props.node.properties[cardConfig[label].subHeaderUrlParam]} \n          target=\"_blank\">{cardConfig[label].subHeaderText}\n        </a>\n    }\n  \n    return (\n      <Card className={classes.root}>\n        <CardHeader\n          avatar={\n            <Avatar aria-label=\"recipe\" className={classes.avatar} style={style}>\n              {avatar}\n            </Avatar>\n          }\n          action={\n            <IconButton aria-label=\"settings\">\n              <MinimizeIcon onClick={() => props.onMinimizeClick(props.node.id)}/>\n            </IconButton>\n          }\n          subheader={<Typography>{subheader}</Typography>} \n        />\n        <CardContent classes={{root: classes.cardContent}} >\n          <NestedProperties node={props.node}/>\n          <Divider style={{marginTop: 8}} />\n          <NestedLinks\n            node={props.node}\n            vGraph={props.vGraph}\n            iGraph={props.iGraph}\n            onButtonClick={props.onButtonClick}  />\n        </CardContent>\n      </Card>\n    );\n  }\n  \n  const areEqual = (prevProps, nextProps) => {\n    return ((prevProps.vGraph === nextProps.vGraph) && \n            (prevProps.iGraph === nextProps.iGraph)); //&&\n            //(prevProps.node === nextProps.node));\n  }\n  \n  export default React.memo(RecipeReviewCard, areEqual);","import React, { useState, useEffect } from \"react\";\nimport {Graph} from \"react-d3-graph\";\nimport Card from '../Cards/Card';\nimport CardConfig from '../config';\nimport translate from '../Cards/utils/translate';\nimport shorten from '../Cards/utils/shorten';\nimport {relationshipConfig} from '../config';\n\n\nconst MGraph = (props) => {\n\n  const displayGraph = (props) => {\n    const dispGraph = {\n      nodes: Object.values(props.visibleGraph.toJS().nodes),\n      links: Object.values(props.visibleGraph.toJS().edges),\n    }\n\n    let cardNodeIds = props.cardNodeIds.toJS()\n    //console.log('mgraph card nodes: ', cardNodeIds)\n    dispGraph.nodes = dispGraph.nodes.map((node) => {\n      console.log(\"NODE\", node)\n\n      // if node.id is in array, apply viewGenerator\n\n      if (cardNodeIds.includes(node.id)) {\n        node.size = {\n          height: 4000,\n          width: 2400\n        }\n        node.fontSize = 16\n        node.dispLabel = \" \"\n        node.viewGenerator = (n) => {\n          return <Card\n            node={n}\n            vGraph={props.visibleGraph}\n            iGraph={props.invisibleGraph}\n            onButtonClick={props.onButtonClick}\n            onMinimizeClick={props.onMinimizeClick}/>\n        }\n      } else { // else return SVG icon\n        node.svg = CardConfig[node.labels[0]].svg\n        node.size = 600\n        node.fontSize = 16\n        node.dispLabel = shorten(node.properties[CardConfig[node.labels[0]].contentTextParam])\n      }\n\n      return node\n    })\n\n\n    dispGraph.links = dispGraph.links.map((clearLink) => {\n\n      const link = {...clearLink, ...relationshipConfig[clearLink.type].linkConf}\n\n      // if PARTICIPATED_IN.properties not empty\n      if (relationshipConfig[link.type].properties.length !== 0) {\n\n        relationshipConfig[link.type].result.forEach(conf => {\n          // if node.result in value AND regex=true\n          if (conf.value.toLowerCase().includes(link.properties.result.substring(0, 7).toLowerCase()) && conf.regex) {\n            link.color = conf.color\n          } else {\n            console.log(\"LINK NOT RED\")\n          }\n        });\n\n        let label = ''\n        for (let value of Object.values((relationshipConfig[link.type].properties))) { // for [proposed_price, result]\n          label = label + link.properties[value] + ' '\n        }\n        link.dispLabel = label\n        link.fontSize = 16\n\n      }\n      // if PARTICIPATED_IN.properties IS empty\n      else {\n        link.dispLabel = translate(link.type, 'ru')\n        link.fontSize = 16\n      }\n      return link\n    })\n\n\n    /* DO NOT DELETE\n\n    if (Object.keys(link.properties).length !== 0) {\n       link.label = Object.values(link.properties).join(\" \")\n    }\n    else {\n     link.label = translate(link.type, 'ru')\n   }\n    console.log('LINK', link)\n    return link\n  }) */\n\n    return dispGraph\n  };\n\n  const [windowHeight, setWindowHeight] = useState(window.innerHeight - 110);\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowHeight(window.innerHeight - 110);\n      setWindowWidth(window.innerWidth)\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  const myConfig = {\n    height: windowHeight,\n    width: windowWidth,\n    //height: 1000,\n    //width: 1000,\n    // staticGraphWithDragAndDrop: true,\n    // nodeHighlightBehavior: true,\n    node: {\n      labelProperty: \"dispLabel\"\n    },\n    //   color: \"lightgreen\",\n    //   labelProperty: 'label',\n    //   highlightStrokeColor: \"blue\",\n    //   size: 3300,\n    //   fontSize: 16\n    //\n    //\n    // }\n    // ,\n    \"d3\": {\n      \"alphaTarget\": 0.05,\n      \"gravity\": -100,\n      \"linkLength\": 100,\n      \"linkStrength\": 1,\n      \"disableLinkForce\": false\n    },\n    link: {\n      highlightColor: \"lightblue\",\n      renderLabel: true,\n      labelProperty: 'dispLabel'\n\n    },\n  };\n\n  return <Graph\n    config={myConfig}\n    id=\"d3graph\" // id is mandatory, if no id is defined rd3g will throw an error\n    data={displayGraph(props)}\n    onDoubleClickNode={(nodeId) => {\n      props.onNodeClick(nodeId)\n    }}\n  />\n}\n\nconst areEqual = (prevProps, nextProps) => {\n  return (prevProps.visibleGraph === nextProps.visibleGraph)\n    && (prevProps.invisibleGraph === nextProps.invisibleGraph)\n    && (prevProps.cardNodeIds === nextProps.cardNodeIds)\n}\n\nexport default React.memo(MGraph, areEqual);\n\n","\nexport function toGraph(result, graph) {\n    result.records.forEach((records, i) => {\n        records.keys.forEach((key) => {\n            const nodge = records.get(key)\n            if (nodge.hasOwnProperty('start')) { //Check if it is edge\n                graph.edges[nodge.identity.low] = {\n                    source: nodge.start.low,\n                    target: nodge.end.low,\n                    type: nodge.type,\n                    properties: nodge.properties\n                }\n            } else {\n                graph.nodes[nodge.identity.low] = {\n                    id: nodge.identity.low,\n                    labels: nodge.labels,\n                    properties: nodge.properties\n                }\n            }\n        })\n    })\n    return graph;\n}\nexport function reconcileGraphs(vGraph, iGraph) {\n    Object.keys(iGraph.edges).forEach((key) => {\n        if (Object.keys(vGraph.nodes).includes(iGraph.edges[key].source.toString()) &&\n            Object.keys(vGraph.nodes).includes(iGraph.edges[key].target.toString())) {\n            vGraph.edges[key] = iGraph.edges[key]\n        }\n    })\n    return vGraph\n}\n","import React, { Component } from 'react';\n\nimport neo4j from 'neo4j-driver'\nimport Immutable from 'immutable'\n\nimport './my-svg.svg'\nimport MGraph from \"../MGraph/MGraph\";\nimport * as gh from './graphHelpers.js'\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Grid, Typography, Box } from '@material-ui/core';\n\nclass GraphComponent extends Component{\n\n  driver = neo4j.driver('bolt://neo4j.kloop.io:7687')\n\n  state = {\n    visibleGraph: Immutable.fromJS({nodes: {}, edges: {}}),\n    invisibleGraph: Immutable.fromJS({nodes: {}, edges: {}}),\n    cardNodeIds: Immutable.fromJS([9350, 18766, 371947]),\n    showSpinner: false,\n    showSmallSpinner: false\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.isGoClick !== this.props.isGoClick) {\n      this.goClick(this.props.cypherQuery)\n      this.props.goClick()\n    }\n    if (prevProps.isClearGraph !== this.props.isClearGraph) {\n      this.clearGraphs()\n      this.props.clearClick()\n    }\n  }\n\n  clearGraphs = () => {\n    this.setState({visibleGraph: Immutable.fromJS({nodes: {}, edges: {}}),\n                   invisibleGraph: Immutable.fromJS({nodes: {}, edges: {}})})\n  }\n\n  goClick = (query) => {\n    this.executeQuery(query)\n  }\n\n  executeQuery = (cypherQuery) => {\n    this.setState({showSpinner: true})\n    const session = this.driver.session()\n    session\n      .run(cypherQuery)\n      .then(result => {\n        let updatedVisibleGraph = gh.toGraph(result, this.state.visibleGraph.toJS())\n        const paramIDs = Object.keys(updatedVisibleGraph.nodes).toString()\n        this.setState({\n          visibleGraph: Immutable.fromJS(updatedVisibleGraph)\n        })\n        this.updateInvisible(paramIDs, updatedVisibleGraph, this.state.invisibleGraph.toJS()) \n      })\n      .catch(error => {\n        console.log(error)\n      })\n      .then(() => {\n        session.close()\n        this.setState({showSpinner: false})\n      })\n\n  }\n\n  updateInvisible = (paramIDs, updatedVisibleGraph, invisibleGraph) => {\n    this.setState({showSmallSpinner: true})\n    const invisibleSession = this.driver.session()\n    invisibleSession\n      .run(\"MATCH (n)-[r]-(b) WHERE ID(n) in [\"+ paramIDs +\"] RETURN n, r, b\")\n      .then(result => {\n        const updatedInvisibleGraph = gh.toGraph(result,\n          invisibleGraph)\n        updatedVisibleGraph = gh.reconcileGraphs(updatedVisibleGraph,\n          updatedInvisibleGraph)\n        this.setState({\n          visibleGraph: Immutable.fromJS(updatedVisibleGraph),\n          invisibleGraph: Immutable.fromJS(updatedInvisibleGraph)\n        })\n      })\n      .catch(error => {\n        console.log(error)\n      })\n      .then(() => {\n        invisibleSession.close()\n        this.setState({showSmallSpinner: false})\n      })\n  }\n\n  mergeGraphs = (ids, vGraph, iGraph) => {\n    ids.forEach((id) => {\n      vGraph.edges[id] = iGraph.edges[id]\n      vGraph.nodes[vGraph.edges[id].source] = iGraph.nodes[iGraph.edges[id].source] \n      vGraph.nodes[vGraph.edges[id].target] = iGraph.nodes[iGraph.edges[id].target] \n    })\n    let updatedVisibleGraph = gh.reconcileGraphs(vGraph, iGraph)\n    this.updateInvisible(ids, updatedVisibleGraph, this.state.invisibleGraph.toJS())\n    updatedVisibleGraph = gh.reconcileGraphs(updatedVisibleGraph, this.state.invisibleGraph.toJS())\n    return updatedVisibleGraph\n  }\n\n  findNodes(nodes, edges, edgeIds) {\n    const foundNodes = {} \n    Object.keys(nodes).forEach(nodeKey => {\n      edgeIds.forEach(edgeId => {\n        if (nodes[nodeKey].id === edges[edgeId].source || nodes[nodeKey].id === edges[edgeId].target){\n          foundNodes[nodeKey] = nodes[nodeKey]\n        }\n      })\n    }) \n    return foundNodes\n  }\n\n  removeElements = (ids, vGraph, iGraph) => {\n    const innocentNodes = this.findNodes(vGraph.nodes, vGraph.edges, ids)\n    ids.forEach((id) => {\n      let nodeToRemove = vGraph.nodes[vGraph.edges[id].target]\n      if (!Object.keys(innocentNodes).includes(String(nodeToRemove.id))){\n        delete vGraph.nodes[vGraph.edges[id].target]\n        delete vGraph.edges[id]\n      }\n      // delete iGraph.nodes[iGraph.edges[id].source]\n      // delete iGraph.nodes[iGraph.edges[id].target]\n      // delete iGraph.edges[id]\n    })\n    return [vGraph, iGraph]\n  }\n\n  handleButtonClick = (ids) => {\n    const edges = Object.keys(this.state.visibleGraph.toJS().edges)\n    let visibleGraph = this.state.visibleGraph.toJS()\n    let invisibleGraph = this.state.invisibleGraph.toJS()\n    let updatedVisibleGraph = null\n    // if ids are already in visible graph\n    if (ids.every(el => edges.includes(el))) {\n      const graphs = this.removeElements(ids, visibleGraph, invisibleGraph)\n      updatedVisibleGraph = graphs[0]\n      ids = edges.filter(el => !ids.includes(el))\n    } else {\n      updatedVisibleGraph = this.mergeGraphs(ids, visibleGraph, invisibleGraph)\n    }\n    const nodes = this.findNodes(updatedVisibleGraph.nodes, updatedVisibleGraph.edges, ids)\n    this.setState({visibleGraph: Immutable.fromJS(updatedVisibleGraph)})\n    this.updateInvisible(Object.keys(nodes), updatedVisibleGraph, invisibleGraph)\n  }\n\n  removeFromArray = (nodeId) => {\n    let cardNodeIds = this.state.cardNodeIds.toJS()\n    const idIndex = cardNodeIds.indexOf(parseInt(nodeId))\n    if (idIndex > -1) {\n      cardNodeIds.splice(idIndex, 1)\n    }\n    return cardNodeIds\n  }\n\n  addToArray = (nodeId) => {\n    let cardNodeIds = this.state.cardNodeIds.toJS()\n    const idIndex = cardNodeIds.indexOf(parseInt(nodeId))\n    if (idIndex === -1) {\n      cardNodeIds.push(parseInt(nodeId))\n    }\n    return cardNodeIds\n  }\n\n  handleMinimezeClick = (nodeId) => {\n    console.log('minimize clicked', nodeId)\n    const cardNodeIds = this.removeFromArray(nodeId)\n    console.log('card nodes after minimize: ', cardNodeIds)\n    this.setState({cardNodeIds: Immutable.fromJS(cardNodeIds)})\n  }\n\n  handleNodeClick = (nodeId) => {\n    console.log('node clicked', nodeId)\n    console.log(parseInt(nodeId))\n    console.log(this.state.cardNodeIds.toJS())\n    console.log(!this.state.cardNodeIds.toJS().includes(parseInt(nodeId)))\n    if (!this.state.cardNodeIds.toJS().includes(parseInt(nodeId))){\n      const cardNodeIds = this.addToArray(nodeId)\n      this.setState({cardNodeIds: Immutable.fromJS(cardNodeIds)})\n    } else {\n      console.log('doing nothing')\n    }\n  }\n\n  returnSpinner = () => {\n    return (\n    <div style = {{\n      position: 'absolute',\n      height: '100px',\n      width: '100px',\n      top: '50%',\n      left: '50%',\n      marginLeft: '-50px',\n      marginTop: '-50px',\n      }}>\n      <CircularProgress size={100} style={{color: 'grey'}}/>\n    </div>\n    )\n  }\n\n  returnSmallSpinner = () => {\n    return (\n      <Grid container alignContent=\"flex-end\" direction=\"column\" style={{position:\"absolute\", right:0,paddingRight: \"10px\"}}>\n        <Box>\n          <CircularProgress size={32} style={{color: 'grey'}}/>\n        </Box>\n        <Typography variant=\"body2\" component=\"p\" style={{fontSize: \"12px\"}}>Cвязи загружаются</Typography>\n      </Grid>\n    )\n  }\n\n  render() {\n    let graph = null\n    if (Object.keys(this.state.visibleGraph.toJS().nodes).length !== 0) {\n      graph = <MGraph \n        onButtonClick={this.handleButtonClick}\n        onMinimizeClick={this.handleMinimezeClick}\n        onNodeClick={this.handleNodeClick}\n        visibleGraph={this.state.visibleGraph}\n        invisibleGraph={this.state.invisibleGraph}\n        cardNodeIds={this.state.cardNodeIds}/>\n    }\n    return(\n      <div>\n        {this.state.showSmallSpinner ? this.returnSmallSpinner(): null}\n        {this.state.showSpinner ? this.returnSpinner() : graph}\n      </div>\n    )\n  }\n\n}\n\nexport default GraphComponent","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport LoopIcon from '@material-ui/icons/Loop';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport SearchIcon from '@material-ui/icons/Search';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport Tooltip from '@material-ui/core/Tooltip'\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    background: 'transparent',\n    boxShadow: 'none',\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    color: 'gray',\n    marginRight: theme.spacing(2),\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n  searchBar: {\n    width: '600px', \n    paddingLeft: 13, \n    paddingRight: 13,\n    border: '2px solid gray', \n    borderRadius: 25,\n  },\n}));\n\nexport default function PersistentDrawerLeft(props) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, open && classes.hide)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <TextField\n          style={{color: 'grey'}}\n          className={classes.searchBar}\n          value={props.searchText}\n          onChange={props.handleSearchTextChange}\n          placeholder=\"Search...\"\n          onKeyPress = {(event) => {\n            if (event.key === 'Enter') {\n              props.handleGoClick();\n            }\n          }}\n          InputProps={{\n            disableUnderline: true,\n            inputProps: {\n              'aria-label': \"Search\"\n            }\n          }}\n        />\n        <Tooltip title=\"Search\">\n          <IconButton aria-label=\"search\" onClick={props.handleGoClick}>\n            <SearchIcon />\n          </IconButton>\n        </Tooltip>\n        <Tooltip title=\"Reset\">\n          <IconButton aria-label=\"reset\" onClick={props.handleResetClick}>\n            <LoopIcon />\n          </IconButton>\n        </Tooltip>\n        <Tooltip title=\"Clear\">\n          <IconButton aria-label=\"clear\" onClick={props.handleClearClick}>\n            <ClearIcon />\n          </IconButton>\n        </Tooltip>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={open}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n        {['Enter your query below'].map((text, index) => (\n          <ListItem key={text}>\n            <ListItemText primary={text} />\n          </ListItem>\n          \n        ))}\n      </List>\n      <List>\n          <TextField\n           id=\"query\"\n           label=\"Query\"\n           variant=\"outlined\" \n           multiline\n           value={props.cypherQuery}\n           onChange={props.handleCypherQueryTextChange} />\n      </List>\n      <List>\n        <Button variant=\"contained\"\n                className={classes.GoButton}\n                onClick={props.handleGoClick}\n                startIcon={<PlayArrowIcon />}>Run Query</Button>\n      </List>\n      </Drawer>\n      <main style={{padding: 0, height: '100%'}}\n        className={clsx(classes.content, {\n          [classes.contentShift]: open,\n        })}\n      >\n        <div className={classes.drawerHeader} />\n        {props.children}\n      </main>\n    </div>\n  );\n}\n","import React, { Component } from 'react';\nimport './App.css';\nimport './my-svg.svg'\nimport GraphComponent from './components/GraphComponent'\nimport Pagination from '@material-ui/lab/Pagination';\nimport queryString from 'query-string'\nimport AppSideBar from './SideBar/AppSideBar'\nimport Grid from '@material-ui/core/Grid'\n\nconst axios = require('axios').default;\n\nclass App extends Component {\n\n  state = {\n    cypherQuery: \"MATCH (n) where id(n) in [2437183, 18766, 2460290, 371947, 9350, 2437735, 1150073] return n\",\n    searchText: \"\",\n    goClick: false,\n    clearGraph: false,\n    listOfNodes: [],\n    showPagination: false\n  }\n\n  componentDidMount() { \n    let urlString =  queryString.parse(window.location.search, {decode: false})\n    let query = ''\n    console.log(\"URL STRING\", urlString)\n    if (urlString.nodes) {\n      query = \"MATCH (n) where id(n) in [\" + urlString.nodes + \"] return n\"\n      console.log(\"NODES\", query)\n      this.setState({cypherQuery: query})\n      this.handleGoClick()\n    }\n    else if (urlString.url) {\n      console.log(\"urlString\", urlString)\n      this.fetchData(urlString)\n    }\n  }\n\n  handleCypherQueryTextChange = (event) => {\n    this.setState({cypherQuery: event.target.value})\n  }\n\n  handleSearchTextChange = (event) => {\n    let query = \"MATCH (n) where n.text_search =~ '.*\" + event.target.value.toLowerCase() + \".*' return n\"\n    this.setState({searchText: event.target.value, cypherQuery: query})\n  }\n\n  handlePaginationChange = (event, value) => {\n    this.handleClearClick()\n    let nodes = this.state.listOfNodes[value - 1]\n    let query = \"MATCH (n) where id(n) in [\" + nodes.join() + \"] return n\"\n    this.setState({cypherQuery: query})\n    this.handleGoClick()\n  }\n\n  fetchData = (urlString) => {\n    axios.get(urlString.url, {\n      params: {\n        token: urlString.token\n      }\n    })\n    .then(response => {\n      // handle success\n      console.log(response);\n      let query = \"MATCH (n) where id(n) in [\" + response.data[0].join() + \"] return n\"\n      console.log(query)\n      this.setState({listOfNodes: response.data, showPagination: true, cypherQuery: query})\n      this.handleGoClick()\n    })\n    .catch(error => {\n      // handle error\n      console.log('There has been a problem with your fetch operation: ' + error.message);\n    })\n  }\n\n  handleGoClick = () => {\n    this.setState({goClick: true});\n    console.log('go button clicked')\n    console.log('state goClicked ', this.state.goClick)\n  }\n\n  goClick = () => {\n    this.setState({goClick: false})\n  }\n\n  handleClearClick = () => {\n    this.setState({clearGraph: true})\n  }\n\n  clearClick = () => {\n    this.setState({clearGraph: false})\n  }\n\n  handleResetClick = () => {\n    this.handleClearClick()\n    this.handleGoClick()\n  }\n\n  returnPagination = () => {\n    return (\n      <Grid container justify=\"center\" style={{\n        position: 'absolute',\n        left: '50%',\n        bottom: '10px',\n        WebkitTransform: 'translateX(-50%)',\n        transform: 'translateX(-50%)'\n        }} >\n      <Pagination count={this.state.listOfNodes.length} onChange={this.handlePaginationChange} size=\"small\" showFirstButton showLastButton />\n    </Grid>\n    )\n  }\n\n  render() {\n    return(\n      <div className='App'>\n        <AppSideBar \n          cypherQuery={this.state.cypherQuery}\n          handleCypherQueryTextChange={this.handleCypherQueryTextChange}\n          searchText={this.state.searchText}\n          handleSearchTextChange={this.handleSearchTextChange}\n          handleGoClick={this.handleGoClick} \n          handleResetClick={this.handleResetClick}\n          handleClearClick={this.handleClearClick}>\n          <GraphComponent \n            cypherQuery={this.state.cypherQuery}\n            isGoClick={this.state.goClick}\n            goClick={this.goClick}\n            isClearGraph={this.state.clearGraph}\n            clearClick={this.clearClick}/>\n            {this.state.showPagination? this.returnPagination() : null}\n        </AppSideBar>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}