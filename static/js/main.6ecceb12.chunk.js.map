{"version":3,"sources":["Cards/utils/translate.js","config.js","Cards/NestedLinks.js","Cards/utils/shorten.js","Cards/NestedProperties.js","Cards/Card.js","MGraph/MGraph.js","components/graphHelpers.js","components/GraphComponent.js","SideBar/AppSideBar.js","App.js","serviceWorker.js","index.js"],"names":["tranlate_word","word","language","ru","cardConfig","KgMinjust","label","style","backgroundColor","icon","fontSize","svg","subHeaderUrlParam","subHeaderText","contentTextParam","properties","links","KgMinjustParticipants","HeadNameSur","KgProcurementParticipants","KgProcurementLots","KgProcurement","KgProcurementEntitiesWithAddresses","relationshipConfig","CONTROLS","ANNOUNCED","DIRECTOR","INCLUDES_LOTS","NAME_SAKE","NAME_SAKE_INDIVIDUAL","PROBABLE_FATHER","PARTICIPATED_IN","value","regex","color","PROBABLE_SIBLING","PROBABLE_KID","SAME_INN","useStyles","makeStyles","theme","root","palette","background","paper","padding","nested","paddingLeft","spacing","listItemIcon","minWidth","React","memo","props","classes","useState","iEdges","vGraph","toJS","nodes","edges","iGraph","listOfRelationships","Object","keys","map","key","node","id","toString","source","target","type","reduce","obj","relation","object","labels","listOfLinks","includes","filter","element","undefined","getKeyRelationshipIds","ListItem","button","onClick","onButtonClick","ListItemText","primary","translate","primaryTypographyProps","variant","ListItemIcon","className","List","component","aria-labelledby","prevProps","nextProps","shorten","phrase","RegExp","replace","fontWeight","marginBottom","listOfProps","forEach","prop","push","Typography","console","log","maxWidth","textAlign","height","media","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","red","cardContent","paddingTop","paddingBottom","subheader","href","Card","CardHeader","Avatar","aria-label","action","IconButton","onMinimizeClick","CardContent","Divider","marginTop","displayGraph","dispGraph","values","visibleGraph","cardNodeIds","size","dispLabel","viewGenerator","n","invisibleGraph","CardConfig","link","length","result","conf","toLowerCase","substring","window","innerHeight","windowHeight","setWindowHeight","useEffect","handleResize","addEventListener","removeEventListener","myConfig","width","staticGraphWithDragAndDrop","labelProperty","highlightColor","renderLabel","config","data","onDoubleClickNode","nodeId","onNodeClick","toGraph","graph","records","i","nodge","get","hasOwnProperty","identity","low","start","end","reconcileGraphs","GraphComponent","driver","neo4j","state","Immutable","fromJS","showSpinner","clearGraphs","setState","goClick","query","executeQuery","cypherQuery","session","run","then","updatedVisibleGraph","gh","paramIDs","updateInvisible","catch","error","close","updatedInvisibleGraph","mergeGraphs","ids","removeElements","innocentNodes","findNodes","nodeToRemove","String","handleButtonClick","every","el","removeFromArray","idIndex","indexOf","parseInt","splice","addToArray","handleMinimezeClick","handleNodeClick","returnSpinner","position","top","left","CircularProgress","isGoClick","this","isClearGraph","clearClick","edgeIds","foundNodes","nodeKey","edgeId","Component","display","appBar","boxShadow","easing","sharp","leavingScreen","appBarShift","easeOut","enteringScreen","menuButton","marginRight","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","mixins","toolbar","justifyContent","content","flexGrow","contentShift","searchBar","paddingRight","border","borderRadius","PersistentDrawerLeft","useTheme","open","setOpen","CssBaseline","AppBar","clsx","Toolbar","edge","TextField","searchText","onChange","handleSearchTextChange","placeholder","onKeyPress","event","handleGoClick","InputProps","disableUnderline","inputProps","Tooltip","title","handleResetClick","handleClearClick","Drawer","anchor","direction","text","index","multiline","handleCypherQueryTextChange","Button","GoButton","startIcon","children","axios","require","default","App","clearGraph","listOfNodes","showPagination","handlePaginationChange","join","fetchData","urlString","url","params","token","response","message","returnPagination","Grid","container","justify","bottom","WebkitTransform","Pagination","count","showFirstButton","showLastButton","queryString","parse","location","search","decode","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6ecceb12.chunk.js","sourcesContent":["import ru from './translationFiles/ru.json'\r\n\r\nconst tranlate_word = (word, language) => {\r\n    if (word in ru) {\r\n        if (language == 'ru') {\r\n            return ru[word]\r\n    }}\r\n    else {\r\n        return word\r\n    }      \r\n}\r\n\r\nexport default tranlate_word;","import React from 'react'\r\nimport BusinessIcon from '@material-ui/icons/Business';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport GavelIcon from '@material-ui/icons/Gavel';\r\n\r\n\r\n\r\nconst cardConfig = {\r\n    KgMinjust: {\r\n        label: 'KgMinjust',\r\n        style: {backgroundColor: '#fbc02d'},\r\n        icon: <BusinessIcon  style={{ fontSize: 30 }}/>,\r\n        svg: 'https://raw.githubusercontent.com/aleks-walker/graph-montecristo-config/8f8c6843a73515bd2deb47f4b80b8cdf9c0d2451/businessYellow.svg',\r\n        subHeaderUrlParam: 'url',\r\n        subHeaderText: 'Минюст',\r\n        contentTextParam: 'name_ru',\r\n        properties: ['name_ru', 'inn', 'head_name_sur', 'street'],\r\n        links: ['CONTROLS', 'DIRECTOR', 'SAME_INN']\r\n    },\r\n    KgMinjustParticipants: {\r\n        label: 'KgMinjustParticipants',\r\n        style: {backgroundColor: '#fbc02d'},\r\n        icon: <AccountCircleIcon style={{ fontSize: 30 }}/>,\r\n        svg: 'https://raw.githubusercontent.com/aleks-walker/graph-montecristo-config/8f8c6843a73515bd2deb47f4b80b8cdf9c0d2451/accountYellow.svg',\r\n        subHeaderUrlParam: 'org_url',\r\n        subHeaderText: 'Минюст',\r\n        contentTextParam: 'name',\r\n        properties: ['name'],\r\n        links: ['CONTROLS', 'NAME_SAKE', 'PROBABLE_FATHER', 'PROBABLE_SIBLING', 'PROBABLE_KID']\r\n    },\r\n    HeadNameSur: {\r\n        label: 'HeadNameSur',\r\n        style: {backgroundColor: '#fbc02d'},\r\n        icon: <AccountCircleIcon  style={{ fontSize: 30 }}/>,\r\n        svg:  'https://raw.githubusercontent.com/aleks-walker/graph-montecristo-config/8f8c6843a73515bd2deb47f4b80b8cdf9c0d2451/accountYellow.svg',\r\n        subHeaderUrlParam: '',\r\n        subHeaderText: 'Минюст',\r\n        contentTextParam: 'head_name_sur',\r\n        properties: ['head_name_sur'],\r\n        links: ['DIRECTOR', 'NAME_SAKE', 'PROBABLE_FATHER', 'PROBABLE_SIBLING', 'PROBABLE_KID']\r\n    },\r\n    KgProcurementParticipants: {\r\n        label: 'KgProcurementParticipants',\r\n        style: {backgroundColor: '#00897b'},\r\n        icon: <BusinessIcon style={{ fontSize: 30 }}/>,\r\n        svg: 'https://raw.githubusercontent.com/aleks-walker/graph-montecristo-config/8f8c6843a73515bd2deb47f4b80b8cdf9c0d2451/busiessGreen.svg',\r\n        subHeaderUrlParam: '',\r\n        subHeaderText: 'Гос. закупки',\r\n        contentTextParam: 'name',\r\n        properties: ['inn'],\r\n        links: ['PARTICIPATED_IN', 'PARTICIPATED_IN', 'NAME_SAKE_INDIVIDUAL']\r\n    }, \r\n    KgProcurementLots: {\r\n        label: 'KgProcurementLots',\r\n        style: {backgroundColor: '#00897b'},\r\n        icon: <GavelIcon style={{ fontSize: 30 }}/>,\r\n        svg:  'https://raw.githubusercontent.com/aleks-walker/graph-montecristo-config/8f8c6843a73515bd2deb47f4b80b8cdf9c0d2451/gavelGreen.svg',\r\n        subHeaderUrlParam: 'tender_url',\r\n        subHeaderText: 'Гос. закупки',\r\n        contentTextParam: 'lot_name',\r\n        properties: ['lot_name'],\r\n        links: ['PARTICIPATED_IN', 'INCLUDES_LOTS']\r\n    },\r\n    KgProcurement: {\r\n        label: 'KgProcurement',\r\n        style: {backgroundColor: '#00897b'},\r\n        icon: <GavelIcon style={{ fontSize: 30 }}/>,\r\n        svg:  'https://raw.githubusercontent.com/aleks-walker/graph-montecristo-config/83020b7357a5888d237b3661800fec934f692be8/gavelGreen.svg',\r\n        subHeaderUrlParam: 'url',\r\n        subHeaderText: 'Тендер',\r\n        contentTextParam: 'procurement_object_no_quotes',\r\n        properties: ['procurement_method'],\r\n        links: ['ANNOUNCED', 'INCLUDES_LOTS']\r\n    },\r\n    KgProcurementEntitiesWithAddresses: {\r\n        label: 'KgProcurementEntitiesWithAddresses',\r\n        style: {backgroundColor: '#00897b'},\r\n        icon: <GavelIcon style={{ fontSize: 30 }}/>,\r\n        svg:  'https://raw.githubusercontent.com/aleks-walker/graph-montecristo-config/83020b7357a5888d237b3661800fec934f692be8/gavelGreen.svg',\r\n        subHeaderUrlParam: '',\r\n        subHeaderText: 'Закупающая организация',\r\n        contentTextParam: 'procuring_entity',\r\n        properties: ['district'],\r\n        links: ['ANNOUNCED']\r\n    }\r\n}\r\n\r\nexport default cardConfig\r\n\r\n\r\nexport const relationshipConfig = {\r\n    \r\n    CONTROLS: {\r\n        properties: []\r\n    },\r\n    ANNOUNCED: {\r\n        properties: []\r\n    },\r\n    DIRECTOR: {\r\n        properties: []\r\n    },\r\n    INCLUDES_LOTS: {\r\n        properties: []\r\n    },\r\n    NAME_SAKE: {\r\n        properties: []\r\n    },\r\n    NAME_SAKE_INDIVIDUAL: {\r\n        properties: []\r\n    },\r\n    PROBABLE_FATHER: {\r\n        properties: []\r\n    },\r\n    PARTICIPATED_IN: {\r\n        properties: ['proposed_price', 'result'],\r\n        'result': [{\r\n            value: '(Подтверждено)',\r\n            regex: true,\r\n            color: \"red\"\r\n        }]\r\n    },\r\n    PROBABLE_SIBLING: {\r\n        properties: []\r\n    },\r\n    PROBABLE_KID: {\r\n        properties: []\r\n    },\r\n    SAME_INN: {\r\n        properties: []\r\n    },\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport DraftsIcon from '@material-ui/icons/Drafts';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport StarBorder from '@material-ui/icons/StarBorder';\r\n\r\nimport BubbleChartIcon from '@material-ui/icons/BubbleChart';\r\nimport AccountTreeIcon from '@material-ui/icons/AccountTree';\r\n\r\nimport translate from './utils/translate'\r\nimport cardConfig from '../config'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: '1px',\r\n  },\r\n  nested: {\r\n    paddingLeft: theme.spacing(4),\r\n    padding: '1px'\r\n  },\r\n  listItemIcon: {\r\n    minWidth: 'auto'\r\n  }\r\n}));\r\n\r\nconst NestedLinks = (props) => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(true);\r\n\r\n  const handleClick = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  // console.log(props.node)\r\n  // console.log(props.vGraph.toJS())\r\n  // console.log(props.iGraph.toJS()) \r\n\r\n  const vNodes = props.vGraph.toJS().nodes\r\n  const vEdges = props.vGraph.toJS().edges\r\n\r\n  const iNodes = props.iGraph.toJS().nodes\r\n  const iEdges = props.iGraph.toJS().edges\r\n  \r\n\r\n  let listOfRelationships = Object.keys(iEdges).map((key) => {\r\n    if (props.node.id.toString() == iEdges[key].source.toString() || props.node.id.toString() == iEdges[key].target.toString()){\r\n      return iEdges[key].type\r\n    }\r\n  }).reduce(function(obj, relation){\r\n      if (!obj[relation]) {\r\n          obj[relation] = 1;\r\n      } else {\r\n          obj[relation]++;\r\n      }\r\n      return obj;\r\n  }, {});\r\n\r\n   //Delete 'undefined' in listOfRelationships\r\n   listOfRelationships = Object.keys(listOfRelationships).reduce((object, key) => {\r\n    if (key !== 'undefined') {\r\n      object[key] = listOfRelationships[key]\r\n    }\r\n    return object\r\n  }, {})\r\n \r\n  const getKeyRelationshipIds = (type) => {\r\n    let keys = Object.keys(iEdges).map((key) => {\r\n      if ((iEdges[key].type == type) && (props.node.id.toString() == iEdges[key].source.toString() || props.node.id.toString() == iEdges[key].target.toString())){\r\n        return key\r\n      }\r\n    })\r\n\r\n    keys = keys.filter(function( element ) {\r\n      return element !== undefined;\r\n    });\r\n\r\n    return keys\r\n  };\r\n\r\n  const label = props.node.labels[0]\r\n\r\n  let listOfLinks = Object.keys(listOfRelationships).map((key) => {\r\n    if (cardConfig[label] \r\n        && cardConfig[label].links \r\n        && cardConfig[label].links.includes(key)) {\r\n      const keys = getKeyRelationshipIds(key)\r\n          \r\n      return(\r\n        <ListItem style={{padding: '1px'}} button onClick={() => props.onButtonClick(keys)}>          \r\n          <ListItemText primary={translate(key, 'ru') + ' (' + listOfRelationships[key] + ')'} primaryTypographyProps={{variant:\"body2\"}} />\r\n          <ListItemIcon className={classes.listItemIcon}>\r\n            <AccountTreeIcon />\r\n          </ListItemIcon>\r\n        </ListItem>)\r\n    }\r\n  })\r\n\r\n\r\n  return (\r\n    <List\r\n      component=\"nav\"\r\n      aria-labelledby=\"nested-list-subheader\"\r\n      className={classes.root}\r\n    >\r\n      {listOfLinks}\r\n    </List>\r\n  );\r\n}\r\n\r\nconst areEqual = (prevProps, nextProps) => {\r\n  return ((prevProps.vGraph === nextProps.vGraph) && \r\n          (prevProps.iGraph === nextProps.iGraph) &&\r\n          (prevProps.node === nextProps.node));\r\n}\r\n\r\nexport default React.memo(NestedLinks, areEqual);","const shorten = (phrase) => {\r\n  const regex = new RegExp(\"общество с ограниченной ответственностью\", \"i\")\r\n  return phrase.replace(regex, \"ОсОО\")\r\n}\r\n\r\nexport default shorten;","import React from 'react'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport cardConfig from '../config'\r\nimport shorten from './utils/shorten'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    contentTextParam: {\r\n        fontWeight: \"bold\",\r\n        marginBottom: \"5px\"\r\n    }\r\n}));\r\n\r\nconst NestedProperties = (props) => {\r\n    const classes = useStyles();\r\n    let listOfProps = []\r\n    const label = props.node.labels[0]\r\n    if (Object.keys(cardConfig).includes(label)) {\r\n        cardConfig[label].properties.forEach(prop => {\r\n        if (cardConfig[label].properties \r\n                && cardConfig[label].properties.includes(prop)\r\n                && cardConfig[label].contentTextParam !== prop) {\r\n            listOfProps.push(\r\n                <Typography variant=\"body2\" color=\"textPrimary\" component=\"p\">\r\n                    { props.node.properties[prop] }\r\n                </Typography>\r\n            )\r\n        }\r\n        });\r\n    }\r\n    console.log( props.node.properties[cardConfig[label].contentTextParam] )\r\n    return (\r\n        <div>\r\n            <Typography className={classes.contentTextParam} variant=\"body2\" color=\"textPrimary\" component=\"p\" >\r\n                { shorten(props.node.properties[cardConfig[label].contentTextParam]) }\r\n            </Typography>\r\n        {listOfProps}\r\n        </div>\r\n    )\r\n}\r\nconst areEqual = (prevProps, nextProps) => {\r\n  return (prevProps.node.properties === nextProps.node.properties)\r\n}\r\n\r\nexport default React.memo(NestedProperties, areEqual);","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { red } from '@material-ui/core/colors';\r\n\r\nimport MinimizeIcon from '@material-ui/icons/Minimize';\r\nimport Divider from '@material-ui/core/Divider'\r\n\r\nimport NestedLinks from './NestedLinks'\r\nimport NestedProperties from './NestedProperties'\r\nimport cardConfig from '../config'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      maxWidth: 240,\r\n      textAlign: \"left\",\r\n      height : \"auto\"\r\n    },\r\n    media: {\r\n      height: 0,\r\n      // paddingTop: '56.25%', // 16:9\r\n    },\r\n    expand: {\r\n      transform: 'rotate(0deg)',\r\n      marginLeft: 'auto',\r\n      transition: theme.transitions.create('transform', {\r\n        duration: theme.transitions.duration.shortest,\r\n      }),\r\n    },\r\n    expandOpen: {\r\n      transform: 'rotate(180deg)',\r\n    },\r\n    avatar: {\r\n      backgroundColor: red[500],\r\n    },\r\n    cardContent: {\r\n      paddingTop: 0,\r\n      paddingBottom: 0,\r\n      \"&:last-child\": {\r\n        paddingBottom: 7\r\n      }\r\n    },\r\n  }));\r\n\r\n  const RecipeReviewCard = (props) => {\r\n    const classes = useStyles();\r\n\r\n    let style = {}\r\n    let avatar = ''\r\n    let subheader = ''\r\n    if (Object.keys(cardConfig).includes(props.node.labels[0])) {\r\n      const label = props.node.labels[0]\r\n      style = cardConfig[label].style \r\n      avatar = cardConfig[label].icon \r\n      subheader =\r\n        <a \r\n          href={props.node.properties[cardConfig[label].subHeaderUrlParam]} \r\n          target=\"_blank\">{cardConfig[label].subHeaderText}\r\n        </a>\r\n    }\r\n  \r\n    return (\r\n      <Card className={classes.root}>\r\n        <CardHeader\r\n          avatar={\r\n            <Avatar aria-label=\"recipe\" className={classes.avatar} style={style}>\r\n              {avatar}\r\n            </Avatar>\r\n          }\r\n          action={\r\n            <IconButton aria-label=\"settings\">\r\n              <MinimizeIcon onClick={() => props.onMinimizeClick(props.node.id)}/>\r\n            </IconButton>\r\n          }\r\n          subheader={<Typography>{subheader}</Typography>} \r\n        />\r\n        <CardContent classes={{root: classes.cardContent}} >\r\n          <NestedProperties node={props.node}/>\r\n          <Divider style={{marginTop: 8}} />\r\n          <NestedLinks\r\n            node={props.node}\r\n            vGraph={props.vGraph}\r\n            iGraph={props.iGraph}\r\n            onButtonClick={props.onButtonClick}  />\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n  \r\n  const areEqual = (prevProps, nextProps) => {\r\n    return ((prevProps.vGraph === nextProps.vGraph) && \r\n            (prevProps.iGraph === nextProps.iGraph) &&\r\n            (prevProps.node === nextProps.node));\r\n  }\r\n  \r\n  export default React.memo(RecipeReviewCard, areEqual);","import React, { useState, useEffect } from \"react\";\r\nimport {Graph} from \"react-d3-graph\";\r\nimport Card from '../Cards/Card';\r\nimport CardConfig from '../config';\r\nimport translate from '../Cards/utils/translate';\r\nimport shorten from '../Cards/utils/shorten';\r\nimport { relationshipConfig } from '../config';\r\n\r\nconst displayGraph = (props) => {\r\n  const dispGraph = {\r\n    nodes: Object.values(props.visibleGraph.toJS().nodes),\r\n    links: Object.values(props.visibleGraph.toJS().edges),\r\n  }\r\n\r\n  let cardNodeIds = props.cardNodeIds.toJS()\r\n  //console.log('mgraph card nodes: ', cardNodeIds)\r\n  dispGraph.nodes = dispGraph.nodes.map((node) => {\r\n\r\n    // if node.id is in array, apply viewGenerator\r\n\r\n    if (cardNodeIds.includes(node.id)) { \r\n     node.size = 4000;\r\n     node.dispLabel = \" \"\r\n     node.viewGenerator = (n) => {\r\n      return <Card \r\n                node={n}\r\n                vGraph={props.visibleGraph} \r\n                iGraph={props.invisibleGraph} \r\n                onButtonClick={props.onButtonClick}\r\n                onMinimizeClick={props.onMinimizeClick} />\r\n    }} else { // else return SVG icon \r\n      console.log(\"SVG: \", node.labels)\r\n      node.svg = CardConfig[node.labels[0]].svg\r\n      node.size = 600\r\n      node.fontSize = 16\r\n      node.dispLabel = shorten(node.properties[CardConfig[node.labels[0]].contentTextParam])\r\n    }\r\n\r\n    return node\r\n   })\r\n\r\n\r\n   dispGraph.links = dispGraph.links.map((link) => {\r\n\r\n      // if PARTICIPATED_IN.properties not empty\r\n     if (relationshipConfig[link.type].properties.length !== 0) {\r\n        \r\n        relationshipConfig[link.type].result.forEach(conf => {\r\n          // if node.result in value AND regex=true\r\n          if (conf.value.toLowerCase().includes(link.properties.result.substring(0,7).toLowerCase()) && conf.regex) {\r\n            link.color = conf.color\r\n          }\r\n          else {\r\n            console.log(\"LINK NOT RED\")\r\n          }});\r\n\r\n        let label = ''\r\n        for ( let value of Object.values((relationshipConfig[link.type].properties))) { // for [proposed_price, result]\r\n          label = label + link.properties[value] + ' '\r\n        }\r\n        link.dispLabel = label\r\n\r\n     }\r\n     // if PARTICIPATED_IN.properties IS empty\r\n     else {\r\n        link.dispLabel = translate(link.type, 'ru')\r\n     }\r\n     return link\r\n    })\r\n\r\n\r\n     /* DO NOT DELETE\r\n     \r\n     if (Object.keys(link.properties).length !== 0) {\r\n        link.label = Object.values(link.properties).join(\" \")\r\n     }\r\n     else {\r\n      link.label = translate(link.type, 'ru')\r\n    }\r\n     console.log('LINK', link)\r\n     return link\r\n   }) */\r\n\r\n  return dispGraph\r\n};\r\n\r\nconst MGraph = (props) => {\r\n\r\n  const [windowHeight, setWindowHeight] = useState(window.innerHeight - 110);\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowHeight(window.innerHeight - 110);\r\n    }\r\n\r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  const myConfig = {\r\n    height: windowHeight,\r\n    width:'100%',\r\n    staticGraphWithDragAndDrop: true,\r\n    // nodeHighlightBehavior: true,\r\n    node: {\r\n      labelProperty: \"dispLabel\"\r\n    },\r\n    //   color: \"lightgreen\",\r\n    //   labelProperty: 'label',\r\n    //   highlightStrokeColor: \"blue\",\r\n    //   size: 3300,\r\n    //   fontSize: 16\r\n    //\r\n    //\r\n    // }\r\n    // ,\r\n    \"d3\": {\r\n      \"linkLength\": 300,\r\n      \"linkStrength\": 0.1,\r\n    },\r\n    link: {\r\n      highlightColor: \"lightblue\",\r\n      renderLabel: true,\r\n      labelProperty: 'dispLabel'\r\n\r\n    },\r\n  };\r\n\r\n  return <Graph\r\n    config={myConfig}\r\n    id=\"d3graph\" // id is mandatory, if no id is defined rd3g will throw an error\r\n    data={displayGraph(props)}\r\n    onDoubleClickNode ={(nodeId) => {props.onNodeClick(nodeId)}}\r\n  />\r\n}\r\n\r\nconst areEqual = (prevProps, nextProps) => {\r\n  return (prevProps.visibleGraph === nextProps.visibleGraph) \r\n          && (prevProps.invisibleGraph === nextProps.invisibleGraph)\r\n          && (prevProps.cardNodeIds === nextProps.cardNodeIds)\r\n}\r\n\r\nexport default React.memo(MGraph, areEqual);\r\n\r\n","\r\nexport function toGraph(result, graph) {\r\n    result.records.forEach((records, i) => {\r\n        records.keys.forEach((key) => {\r\n            const nodge = records.get(key)\r\n            if (nodge.hasOwnProperty('start')) { //Check if it is edge\r\n                graph.edges[nodge.identity.low] = {\r\n                    source: nodge.start.low,\r\n                    target: nodge.end.low,\r\n                    type: nodge.type,\r\n                    properties: nodge.properties\r\n                }\r\n            } else {\r\n                graph.nodes[nodge.identity.low] = {\r\n                    id: nodge.identity.low,\r\n                    labels: nodge.labels,\r\n                    properties: nodge.properties\r\n                }\r\n            }\r\n        })\r\n    })\r\n    return graph;\r\n}\r\nexport function reconcileGraphs(vGraph, iGraph) {\r\n    Object.keys(iGraph.edges).forEach((key) => {\r\n        if (Object.keys(vGraph.nodes).includes(iGraph.edges[key].source.toString()) &&\r\n            Object.keys(vGraph.nodes).includes(iGraph.edges[key].target.toString())) {\r\n            vGraph.edges[key] = iGraph.edges[key]\r\n        }\r\n    })\r\n    return vGraph\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nimport neo4j from 'neo4j-driver'\r\nimport Immutable from 'immutable'\r\n\r\nimport './my-svg.svg'\r\nimport MGraph from \"../MGraph/MGraph\";\r\nimport * as gh from './graphHelpers.js'\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nclass GraphComponent extends Component{\r\n\r\n  driver = neo4j.driver('bolt://neo4j.kloop.io:7687')\r\n\r\n  state = {\r\n    visibleGraph: Immutable.fromJS({nodes: {}, edges: {}}),\r\n    invisibleGraph: Immutable.fromJS({nodes: {}, edges: {}}),\r\n    cardNodeIds: Immutable.fromJS([9350, 18766, 371947]),\r\n    showSpinner: false,\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.isGoClick !== this.props.isGoClick) {\r\n      this.goClick(this.props.cypherQuery)\r\n      this.props.goClick()\r\n    }\r\n    if (prevProps.isClearGraph !== this.props.isClearGraph) {\r\n      this.clearGraphs()\r\n      this.props.clearClick()\r\n    }\r\n  }\r\n\r\n  clearGraphs = () => {\r\n    this.setState({visibleGraph: Immutable.fromJS({nodes: {}, edges: {}}),\r\n                   invisibleGraph: Immutable.fromJS({nodes: {}, edges: {}})})\r\n  }\r\n\r\n  goClick = (query) => {\r\n    this.executeQuery(query)\r\n  }\r\n\r\n  executeQuery = (cypherQuery) => {\r\n    this.setState({showSpinner: true})\r\n    const session = this.driver.session()\r\n    session\r\n      .run(cypherQuery)\r\n      .then(result => {\r\n        let updatedVisibleGraph = gh.toGraph(result, this.state.visibleGraph.toJS())\r\n        const paramIDs = Object.keys(updatedVisibleGraph.nodes).toString()\r\n        this.setState({\r\n          visibleGraph: Immutable.fromJS(updatedVisibleGraph)\r\n        })\r\n        this.updateInvisible(paramIDs, updatedVisibleGraph, this.state.invisibleGraph.toJS()) \r\n      })\r\n      .catch(error => {\r\n        console.log(error)\r\n      })\r\n      .then(() => {\r\n        session.close()\r\n        this.setState({showSpinner: false})\r\n      })\r\n\r\n  }\r\n\r\n  updateInvisible = (paramIDs, updatedVisibleGraph, invisibleGraph) => {\r\n    const invisibleSession = this.driver.session()\r\n    invisibleSession\r\n      .run(\"MATCH (n)-[r]-(b) WHERE ID(n) in [\"+ paramIDs +\"] RETURN n, r, b\")\r\n      .then(result => {\r\n        const updatedInvisibleGraph = gh.toGraph(result,\r\n          invisibleGraph)\r\n        updatedVisibleGraph = gh.reconcileGraphs(updatedVisibleGraph,\r\n          updatedInvisibleGraph)\r\n        this.setState({\r\n          visibleGraph: Immutable.fromJS(updatedVisibleGraph),\r\n          invisibleGraph: Immutable.fromJS(updatedInvisibleGraph)\r\n        })\r\n\r\n      })\r\n  }\r\n\r\n  mergeGraphs = (ids, vGraph, iGraph) => {\r\n    ids.forEach((id) => {\r\n      vGraph.edges[id] = iGraph.edges[id]\r\n      vGraph.nodes[vGraph.edges[id].source] = iGraph.nodes[iGraph.edges[id].source] \r\n      vGraph.nodes[vGraph.edges[id].target] = iGraph.nodes[iGraph.edges[id].target] \r\n    })\r\n    let updatedVisibleGraph = gh.reconcileGraphs(vGraph, iGraph)\r\n    this.updateInvisible(ids, updatedVisibleGraph, this.state.invisibleGraph.toJS())\r\n    updatedVisibleGraph = gh.reconcileGraphs(updatedVisibleGraph, this.state.invisibleGraph.toJS())\r\n    return updatedVisibleGraph\r\n  }\r\n\r\n  findNodes(nodes, edges, edgeIds) {\r\n    const foundNodes = {} \r\n    Object.keys(nodes).forEach(nodeKey => {\r\n      edgeIds.forEach(edgeId => {\r\n        if (nodes[nodeKey].id === edges[edgeId].source || nodes[nodeKey].id === edges[edgeId].target){\r\n          foundNodes[nodeKey] = nodes[nodeKey]\r\n        }\r\n      })\r\n    }) \r\n    return foundNodes\r\n  }\r\n\r\n  removeElements = (ids, vGraph, iGraph) => {\r\n    const innocentNodes = this.findNodes(vGraph.nodes, vGraph.edges, ids)\r\n    ids.forEach((id) => {\r\n      let nodeToRemove = vGraph.nodes[vGraph.edges[id].target]\r\n      if (!Object.keys(innocentNodes).includes(String(nodeToRemove.id))){\r\n        delete vGraph.nodes[vGraph.edges[id].target]\r\n        delete vGraph.edges[id]\r\n      }\r\n      // delete iGraph.nodes[iGraph.edges[id].source]\r\n      // delete iGraph.nodes[iGraph.edges[id].target]\r\n      // delete iGraph.edges[id]\r\n    })\r\n    return [vGraph, iGraph]\r\n  }\r\n\r\n  handleButtonClick = (ids) => {\r\n    const edges = Object.keys(this.state.visibleGraph.toJS().edges)\r\n    let visibleGraph = this.state.visibleGraph.toJS()\r\n    let invisibleGraph = this.state.invisibleGraph.toJS()\r\n    let updatedVisibleGraph = null\r\n    // if ids are already in visible graph\r\n    if (ids.every(el => edges.includes(el))) {\r\n      const graphs = this.removeElements(ids, visibleGraph, invisibleGraph)\r\n      updatedVisibleGraph = graphs[0]\r\n      ids = edges.filter(el => !ids.includes(el))\r\n    } else {\r\n      updatedVisibleGraph = this.mergeGraphs(ids, visibleGraph, invisibleGraph)\r\n    }\r\n    this.setState({visibleGraph: Immutable.fromJS(updatedVisibleGraph)})\r\n  }\r\n\r\n  removeFromArray = (nodeId) => {\r\n    let cardNodeIds = this.state.cardNodeIds.toJS()\r\n    const idIndex = cardNodeIds.indexOf(parseInt(nodeId))\r\n    if (idIndex > -1) {\r\n      cardNodeIds.splice(idIndex, 1)\r\n    }\r\n    return cardNodeIds\r\n  }\r\n\r\n  addToArray = (nodeId) => {\r\n    let cardNodeIds = this.state.cardNodeIds.toJS()\r\n    const idIndex = cardNodeIds.indexOf(parseInt(nodeId))\r\n    if (idIndex === -1) {\r\n      cardNodeIds.push(parseInt(nodeId))\r\n    }\r\n    return cardNodeIds\r\n  }\r\n\r\n  handleMinimezeClick = (nodeId) => {\r\n    console.log('minimize clicked', nodeId)\r\n    const cardNodeIds = this.removeFromArray(nodeId)\r\n    console.log('card nodes after minimize: ', cardNodeIds)\r\n    this.setState({cardNodeIds: Immutable.fromJS(cardNodeIds)})\r\n  }\r\n\r\n  handleNodeClick = (nodeId) => {\r\n    console.log('node clicked', nodeId)\r\n    console.log(parseInt(nodeId))\r\n    console.log(this.state.cardNodeIds.toJS())\r\n    console.log(!this.state.cardNodeIds.toJS().includes(parseInt(nodeId)))\r\n    if (!this.state.cardNodeIds.toJS().includes(parseInt(nodeId))){\r\n      const cardNodeIds = this.addToArray(nodeId)\r\n      this.setState({cardNodeIds: Immutable.fromJS(cardNodeIds)})\r\n    } else {\r\n      console.log('doing nothing')\r\n    }\r\n  }\r\n\r\n  returnSpinner = () => {\r\n    return (\r\n    <div style = {{\r\n      position: 'absolute',\r\n      height: '100px',\r\n      width: '100px',\r\n      top: '50%',\r\n      left: '50%',\r\n      marginLeft: '-50px',\r\n      marginTop: '-50px',\r\n      }}>\r\n      <CircularProgress size={100} style={{color: 'grey'}}/>\r\n    </div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    let graph = null\r\n    if (Object.keys(this.state.visibleGraph.toJS().nodes).length !== 0) {\r\n      graph = <MGraph \r\n        onButtonClick={this.handleButtonClick}\r\n        onMinimizeClick={this.handleMinimezeClick}\r\n        onNodeClick={this.handleNodeClick}\r\n        visibleGraph={this.state.visibleGraph}\r\n        invisibleGraph={this.state.invisibleGraph}\r\n        cardNodeIds={this.state.cardNodeIds}/>\r\n    }\r\n    return(\r\n      <div>\r\n        {this.state.showSpinner ? this.returnSpinner() : graph}\r\n        {/* {graph} */}\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default GraphComponent","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport LoopIcon from '@material-ui/icons/Loop';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport Tooltip from '@material-ui/core/Tooltip'\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    background: 'transparent',\r\n    boxShadow: 'none',\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    color: 'gray',\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: 'flex-end',\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    marginLeft: -drawerWidth,\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    marginLeft: 0,\r\n  },\r\n  searchBar: {\r\n    width: '600px', \r\n    paddingLeft: 13, \r\n    paddingRight: 13,\r\n    border: '2px solid gray', \r\n    borderRadius: 25,\r\n  },\r\n}));\r\n\r\nexport default function PersistentDrawerLeft(props) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, open && classes.hide)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <TextField\r\n          style={{color: 'grey'}}\r\n          className={classes.searchBar}\r\n          value={props.searchText}\r\n          onChange={props.handleSearchTextChange}\r\n          placeholder=\"Search...\"\r\n          onKeyPress = {(event) => {\r\n            if (event.key === 'Enter') {\r\n              props.handleGoClick();\r\n            }\r\n          }}\r\n          InputProps={{\r\n            disableUnderline: true,\r\n            inputProps: {\r\n              'aria-label': \"Search\"\r\n            }\r\n          }}\r\n        />\r\n        <Tooltip title=\"Search\">\r\n          <IconButton aria-label=\"search\" onClick={props.handleGoClick}>\r\n            <SearchIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n        <Tooltip title=\"Reset\">\r\n          <IconButton aria-label=\"reset\" onClick={props.handleResetClick}>\r\n            <LoopIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n        <Tooltip title=\"Clear\">\r\n          <IconButton aria-label=\"clear\" onClick={props.handleClearClick}>\r\n            <ClearIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"persistent\"\r\n        anchor=\"left\"\r\n        open={open}\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n        <div className={classes.drawerHeader}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n        {['Enter your query below'].map((text, index) => (\r\n          <ListItem key={text}>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n          \r\n        ))}\r\n      </List>\r\n      <List>\r\n          <TextField\r\n           id=\"query\"\r\n           label=\"Query\"\r\n           variant=\"outlined\" \r\n           multiline\r\n           value={props.cypherQuery}\r\n           onChange={props.handleCypherQueryTextChange} />\r\n      </List>\r\n      <List>\r\n        <Button variant=\"contained\"\r\n                className={classes.GoButton}\r\n                onClick={props.handleGoClick}\r\n                startIcon={<PlayArrowIcon />}>Run Query</Button>\r\n      </List>\r\n      </Drawer>\r\n      <main style={{padding: 0, height: '100%'}}\r\n        className={clsx(classes.content, {\r\n          [classes.contentShift]: open,\r\n        })}\r\n      >\r\n        <div className={classes.drawerHeader} />\r\n        {props.children}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport './my-svg.svg'\r\nimport GraphComponent from './components/GraphComponent'\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport queryString from 'query-string'\r\nimport AppSideBar from './SideBar/AppSideBar'\r\nimport Grid from '@material-ui/core/Grid'\r\n\r\nconst axios = require('axios').default;\r\n\r\nclass App extends Component {\r\n\r\n  state = {\r\n    cypherQuery: \"MATCH (n) where id(n) in [2437183, 18766, 2460290, 371947, 9350, 2437735, 1150073] return n\",\r\n    searchText: \"\",\r\n    goClick: false,\r\n    clearGraph: false,\r\n    listOfNodes: [],\r\n    showPagination: false\r\n  }\r\n\r\n  componentDidMount() { \r\n    let urlString =  queryString.parse(window.location.search, {decode: false})\r\n    let query = ''\r\n    console.log(\"URL STRING\", urlString)\r\n    if (urlString.nodes) {\r\n      query = \"MATCH (n) where id(n) in [\" + urlString.nodes + \"] return n\"\r\n      console.log(\"NODES\", query)\r\n      this.setState({cypherQuery: query})\r\n      this.handleGoClick()\r\n    }\r\n    else if (urlString.url) {\r\n      console.log(\"urlString\", urlString)\r\n      this.fetchData(urlString)\r\n    }\r\n  }\r\n\r\n  handleCypherQueryTextChange = (event) => {\r\n    this.setState({cypherQuery: event.target.value})\r\n  }\r\n\r\n  handleSearchTextChange = (event) => {\r\n    let query = \"MATCH (n) where n.text_search =~ '.*\" + event.target.value.toLowerCase() + \".*' return n\"\r\n    this.setState({searchText: event.target.value, cypherQuery: query})\r\n  }\r\n\r\n  handlePaginationChange = (event, value) => {\r\n    this.handleClearClick()\r\n    let nodes = this.state.listOfNodes[value - 1]\r\n    let query = \"MATCH (n) where id(n) in [\" + nodes.join() + \"] return n\"\r\n    this.setState({cypherQuery: query})\r\n    this.handleGoClick()\r\n  }\r\n\r\n  fetchData = (urlString) => {\r\n    axios.get(urlString.url, {\r\n      params: {\r\n        token: urlString.token\r\n      }\r\n    })\r\n    .then(response => {\r\n      // handle success\r\n      console.log(response);\r\n      let query = \"MATCH (n) where id(n) in [\" + response.data[0].join() + \"] return n\"\r\n      console.log(query)\r\n      this.setState({listOfNodes: response.data, showPagination: true, cypherQuery: query})\r\n      this.handleGoClick()\r\n    })\r\n    .catch(error => {\r\n      // handle error\r\n      console.log('There has been a problem with your fetch operation: ' + error.message);\r\n    })\r\n  }\r\n\r\n  handleGoClick = () => {\r\n    this.setState({goClick: true});\r\n    console.log('go button clicked')\r\n    console.log('state goClicked ', this.state.goClick)\r\n  }\r\n\r\n  goClick = () => {\r\n    this.setState({goClick: false})\r\n  }\r\n\r\n  handleClearClick = () => {\r\n    this.setState({clearGraph: true})\r\n  }\r\n\r\n  clearClick = () => {\r\n    this.setState({clearGraph: false})\r\n  }\r\n\r\n  handleResetClick = () => {\r\n    this.handleClearClick()\r\n    this.handleGoClick()\r\n  }\r\n\r\n  returnPagination = () => {\r\n    return (\r\n      <Grid container justify=\"center\" style={{\r\n        position: 'absolute',\r\n        left: '50%',\r\n        bottom: '10px',\r\n        WebkitTransform: 'translateX(-50%)',\r\n        transform: 'translateX(-50%)'\r\n        }} >\r\n      <Pagination count={this.state.listOfNodes.length} onChange={this.handlePaginationChange} size=\"small\" showFirstButton showLastButton />\r\n    </Grid>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div className='App'>\r\n        <AppSideBar \r\n          cypherQuery={this.state.cypherQuery}\r\n          handleCypherQueryTextChange={this.handleCypherQueryTextChange}\r\n          searchText={this.state.searchText}\r\n          handleSearchTextChange={this.handleSearchTextChange}\r\n          handleGoClick={this.handleGoClick} \r\n          handleResetClick={this.handleResetClick}\r\n          handleClearClick={this.handleClearClick}>\r\n          <GraphComponent \r\n            cypherQuery={this.state.cypherQuery}\r\n            isGoClick={this.state.goClick}\r\n            goClick={this.goClick}\r\n            isClearGraph={this.state.clearGraph}\r\n            clearClick={this.clearClick}/>\r\n            {this.state.showPagination? this.returnPagination() : null}\r\n        </AppSideBar>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}