{"version":3,"sources":["Cards/utils/translate.js","config.js","Cards/NestedLinks.js","Cards/utils/shorten.js","Cards/utils/formatDate.js","Cards/NestedProperties.js","Cards/Card.js","MGraph/MGraph.js","components/graphHelpers.js","components/GraphComponent.js","SideBar/AppSideBar.js","App.js","serviceWorker.js","index.js"],"names":["tranlate_word","word","language","ru","cardConfig","KgMinjust","label","style","backgroundColor","icon","fontSize","svg","subHeaderUrlParam","subHeaderText","contentTextParam","properties","links","reverseLinks","KgMinjustParticipants","HeadNameSur","KgProcurementParticipants","KgProcurementLots","KgProcurement","KgProcurementEntitiesWithAddresses","relationshipConfig","CONTROLS","linkConf","ANNOUNCED","DIRECTOR","INCLUDES_LOTS","NAME_SAKE","NAME_SAKE_INDIVIDUAL","PROBABLE_FATHER","PARTICIPATED_IN","value","regex","color","PROBABLE_SIBLING","PROBABLE_KID","SAME_INN","useStyles","makeStyles","theme","root","palette","background","paper","padding","nested","paddingLeft","spacing","listItemIcon","minWidth","React","memo","props","classes","useState","iEdges","vGraph","toJS","nodes","edges","iGraph","listOfRelationships","Object","keys","map","key","node","id","toString","source","target","type","reduce","obj","relation","object","labels","listOfLinks","includes","filter","element","undefined","getKeyRelationshipIds","newKey","length","ListItem","button","onClick","onButtonClick","ListItemText","primary","translate","primaryTypographyProps","variant","ListItemIcon","className","List","component","aria-labelledby","prevProps","nextProps","shorten","phrase","RegExp","replace","formatDate","d","date","Date","time","getHours","getMinutes","day","getDate","month","getMonth","getFullYear","fontWeight","marginBottom","listOfProps","forEach","prop","push","Typography","console","log","maxWidth","textAlign","height","media","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","red","cardContent","paddingTop","paddingBottom","cardRef","useRef","width","dimensions","setDimensions","getDimensions","useEffect","current","offsetWidth","offsetHeight","subheader","href","Card","ref","CardHeader","Avatar","aria-label","action","IconButton","onMinimizeClick","CardContent","Divider","marginTop","objNode","setDim","window","innerHeight","windowHeight","setWindowHeight","innerWidth","windowWidth","setWindowWidth","handleResize","addEventListener","removeEventListener","myConfig","staticGraphWithDragAndDrop","newCoords","labelProperty","link","highlightColor","renderLabel","graphRef","handlePosChange","state","coords","entries","x","y","returnCoords","config","data","dispGraph","values","visibleGraph","cardNodeIds","dispLabel","viewGenerator","n","dim","invisibleGraph","CardConfig","size","highlightFontSize","hasOwnProperty","clearLink","result","conf","toLowerCase","substring","displayGraph","onNodePositionChange","nodeId","onDoubleClickNode","onNodeClick","toGraph","graph","records","i","nodge","get","identity","low","start","end","reconcileGraphs","GraphComponent","driver","neo4j","Immutable","fromJS","showSpinner","showSmallSpinner","clearGraphs","setState","goClick","query","errorMessage","executeQuery","cypherQuery","session","run","then","updatedVisibleGraph","gh","paramIDs","updateInvisible","catch","error","close","invisibleSession","updatedInvisibleGraph","mergeGraphs","ids","removeElements","nodeKey","innocentNodes","findNodes","direction","nodeToRemove","parseInt","String","handleButtonClick","removeFromArray","idIndex","indexOf","splice","addToArray","handleMinimezeClick","handleNodeClick","returnSpinner","position","top","left","CircularProgress","returnSmallSpinner","Grid","container","alignContent","right","paddingRight","Box","isGoClick","this","isClearGraph","clearClick","edgeIds","foundNodes","edgeId","Component","display","appBar","boxShadow","easing","sharp","leavingScreen","appBarShift","easeOut","enteringScreen","menuButton","marginRight","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","mixins","toolbar","justifyContent","content","flexGrow","contentShift","searchBar","border","borderRadius","PersistentDrawerLeft","useTheme","open","setOpen","CssBaseline","AppBar","clsx","Toolbar","edge","TextField","searchText","onChange","handleSearchTextChange","placeholder","onKeyPress","event","handleGoClick","InputProps","disableUnderline","inputProps","Tooltip","title","handleClearClick","Drawer","anchor","text","index","multiline","handleCypherQueryTextChange","Button","GoButton","startIcon","JSON","stringify","nodeCoords","children","axios","require","default","App","clearGraph","listOfNodes","showPagination","handlePaginationChange","join","fetchData","urlString","url","params","token","response","message","handleResetClick","handleError","returnPagination","justify","bottom","WebkitTransform","Pagination","count","showFirstButton","showLastButton","queryString","parse","location","search","decode","dec","decodeURI","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.27a2d754.chunk.js","sourcesContent":["import ru from './translationFiles/ru.json'\n\nconst tranlate_word = (word, language) => {\n    if (word in ru) {\n        if (language == 'ru') {\n            return ru[word]\n    }}\n    else {\n        return word\n    }      \n}\n\nexport default tranlate_word;","import React from 'react'\nimport BusinessIcon from '@material-ui/icons/Business';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport GavelIcon from '@material-ui/icons/Gavel';\nimport AccountBalanceIcon from '@material-ui/icons/AccountBalance';\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\n\n\nconst cardConfig = {\n    KgMinjust: {\n        label: 'KgMinjust',\n        style: {backgroundColor: '#fbc02d'},\n        icon: <BusinessIcon  style={{ fontSize: 30 }}/>,\n        svg: 'https://raw.githubusercontent.com/aleks-walker/graph-montecristo-config/8f8c6843a73515bd2deb47f4b80b8cdf9c0d2451/businessYellow.svg',\n        subHeaderUrlParam: 'url',\n        subHeaderText: 'Минюст',\n        contentTextParam: 'name_ru',\n        properties: ['inn', 'head_name_sur', 'region', 'district', 'street', 'home', 'apartment'],\n        links: ['CONTROLS', 'DIRECTOR', 'SAME_INN'],\n        reverseLinks: {}\n    },\n    KgMinjustParticipants: {\n        label: 'KgMinjustParticipants',\n        style: {backgroundColor: '#fbc02d'},\n        icon: <AccountCircleIcon style={{ fontSize: 30 }}/>,\n        svg: 'https://raw.githubusercontent.com/aleks-walker/graph-montecristo-config/8f8c6843a73515bd2deb47f4b80b8cdf9c0d2451/accountYellow.svg',\n        subHeaderUrlParam: 'org_url',\n        subHeaderText: 'Минюст',\n        contentTextParam: 'name',\n        properties: ['name'],\n        links: ['CONTROLS', 'NAME_SAKE', 'PROBABLE_FATHER', 'PROBABLE_SIBLING', 'PROBABLE_KID'],\n        reverseLinks: {}\n    },\n    HeadNameSur: {\n        label: 'HeadNameSur',\n        style: {backgroundColor: '#fbc02d'},\n        icon: <AccountCircleIcon  style={{ fontSize: 30 }}/>,\n        svg:  'https://raw.githubusercontent.com/aleks-walker/graph-montecristo-config/8f8c6843a73515bd2deb47f4b80b8cdf9c0d2451/accountYellow.svg',\n        subHeaderUrlParam: '',\n        subHeaderText: 'Минюст',\n        contentTextParam: 'head_name_sur',\n        properties: ['head_name_sur'],\n        links: ['DIRECTOR', 'NAME_SAKE', 'PROBABLE_FATHER', 'PROBABLE_SIBLING', 'PROBABLE_KID'],\n        reverseLinks: {}\n    },\n    KgProcurementParticipants: {\n        label: 'KgProcurementParticipants',\n        style: {backgroundColor: '#00897b'},\n        icon: <BusinessIcon style={{ fontSize: 30 }}/>,\n        svg: 'https://raw.githubusercontent.com/aleks-walker/graph-montecristo-config/8f8c6843a73515bd2deb47f4b80b8cdf9c0d2451/busiessGreen.svg',\n        subHeaderUrlParam: '',\n        subHeaderText: 'Госзакупки',\n        contentTextParam: 'name',\n        properties: ['inn'],\n        links: ['PARTICIPATED_IN', 'NAME_SAKE_INDIVIDUAL'],\n        reverseLinks: {}\n    }, \n    KgProcurementLots: {\n        label: 'KgProcurementLots',\n        style: {backgroundColor: '#00897b'},\n        icon: <GavelIcon style={{ fontSize: 30 }}/>,\n        svg:  'https://raw.githubusercontent.com/aleks-walker/graph-montecristo-config/8f8c6843a73515bd2deb47f4b80b8cdf9c0d2451/gavelGreen.svg',\n        subHeaderUrlParam: 'tender_url',\n        subHeaderText: 'Госзакупки',\n        contentTextParam: 'lot_name',\n        properties: ['lot_name', 'lot_sum_int'],\n        links: ['PARTICIPATED_IN', 'INCLUDES_LOTS'],\n        reverseLinks: {'PARTICIPATED_IN':'PARTICIPANTS',\n                        'INCLUDES_LOTS': 'TENDER'}\n    },\n    KgProcurement: {\n        label: 'KgProcurement',\n        style: {backgroundColor: '#00897b'},\n        icon: <MonetizationOnIcon style={{ fontSize: 30 }}/>,\n        svg:  'https://raw.githubusercontent.com/aleks-walker/graph-montecristo-config/13c35330a9b7ae752e04638edb39068555ae9374/monetizeGreen.svg',\n        subHeaderUrlParam: 'url',\n        subHeaderText: 'Тендер',\n        contentTextParam: 'procurement_object_no_quotes',\n        properties: ['procurement_method', 'publication_date'],\n        links: ['ANNOUNCED', 'INCLUDES_LOTS'],\n        reverseLinks: {'ANNOUNCED':'ENTITY'}\n    },\n    KgProcurementEntitiesWithAddresses: {\n        label: 'KgProcurementEntitiesWithAddresses',\n        style: {backgroundColor: '#00897b'},\n        icon: <AccountBalanceIcon style={{ fontSize: 30 }}/>,\n        svg:  'https://raw.githubusercontent.com/aleks-walker/graph-montecristo-config/83020b7357a5888d237b3661800fec934f692be8/orgTenderGreen.svg',\n        subHeaderUrlParam: '',\n        subHeaderText: 'Закупающая организация',\n        contentTextParam: 'procuring_entity', \n        properties: ['district'],\n        links: ['ANNOUNCED'],\n        reverseLinks: {}\n    }\n}\n\nexport default cardConfig\n\n\nexport const relationshipConfig = {\n    \n    CONTROLS: {\n        properties: [],\n        linkConf: {'fontSize' : 14}\n    },\n    ANNOUNCED: {\n        properties: [],\n        linkConf: {'fontSize' : 14}\n    },\n    DIRECTOR: {\n        properties: [],\n        linkConf: {'fontSize' : 14}\n    },\n    INCLUDES_LOTS: {\n        properties: [],\n        linkConf: {'fontSize' : 14}\n    },\n    NAME_SAKE: {\n        properties: [],\n        linkConf: {'fontSize' : 14}\n    },\n    NAME_SAKE_INDIVIDUAL: {\n        properties: [],\n        linkConf: {'fontSize' : 14}\n    },\n    PROBABLE_FATHER: {\n        properties: [],\n        linkConf: {'fontSize' : 14}\n    },\n    PARTICIPATED_IN: {\n        properties: ['proposed_price', 'result'],\n        'result': [{\n            value: '(Подтверждено)',\n            regex: true,\n            color: \"red\"\n        }],\n        linkConf: {'fontSize' : 14}\n    },\n    PROBABLE_SIBLING: {\n        properties: [],\n        linkConf: {'fontSize' : 14}\n    },\n    PROBABLE_KID: {\n        properties: [],\n        linkConf: {'fontSize' : 14}\n    },\n    SAME_INN: {\n        properties: [],\n        linkConf: {'fontSize' : 14}\n    },\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Collapse from '@material-ui/core/Collapse';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport DraftsIcon from '@material-ui/icons/Drafts';\nimport SendIcon from '@material-ui/icons/Send';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport StarBorder from '@material-ui/icons/StarBorder';\n\nimport BubbleChartIcon from '@material-ui/icons/BubbleChart';\nimport AccountTreeIcon from '@material-ui/icons/AccountTree';\n\nimport translate from './utils/translate'\nimport cardConfig from '../config'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n    padding: '1px',\n  },\n  nested: {\n    paddingLeft: theme.spacing(4),\n    padding: '1px'\n  },\n  listItemIcon: {\n    minWidth: 'auto'\n  }\n}));\n\nconst NestedLinks = (props) => {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n\n  const handleClick = () => {\n    setOpen(!open);\n  };\n\n  // console.log(props.node)\n  // console.log(props.vGraph.toJS())\n  // console.log(props.iGraph.toJS()) \n\n  const vNodes = props.vGraph.toJS().nodes\n  const vEdges = props.vGraph.toJS().edges\n\n  const iNodes = props.iGraph.toJS().nodes\n  const iEdges = props.iGraph.toJS().edges\n  \n\n  let listOfRelationships = Object.keys(iEdges).map((key) => {\n    if (props.node.id.toString() == iEdges[key].source.toString() || props.node.id.toString() == iEdges[key].target.toString()){\n      return iEdges[key].type\n    }\n  }).reduce(function(obj, relation){\n      if (!obj[relation]) {\n          obj[relation] = 1;\n      } else {\n          obj[relation]++;\n      }\n      return obj;\n  }, {});\n\n   //Delete 'undefined' in listOfRelationships\n   listOfRelationships = Object.keys(listOfRelationships).reduce((object, key) => {\n    if (key !== 'undefined') {\n      object[key] = listOfRelationships[key]\n    }\n    return object\n  }, {})\n \n  const getKeyRelationshipIds = (type) => {\n    let keys = Object.keys(iEdges).map((key) => {\n      if ((iEdges[key].type == type) && (props.node.id.toString() == iEdges[key].source.toString() || props.node.id.toString() == iEdges[key].target.toString())){\n        return key\n      }\n    })\n\n    keys = keys.filter(function( element ) {\n      return element !== undefined;\n    });\n\n    return keys\n  };\n\n  const label = props.node.labels[0]\n\n  let listOfLinks = Object.keys(listOfRelationships).map((key) => {\n    if (cardConfig[label] \n        && cardConfig[label].links \n        && cardConfig[label].links.includes(key)) {\n      const keys = getKeyRelationshipIds(key)\n\n      let newKey = ''\n\n      // if node.reverseLinks AND key in reverseLinks: \n      \n      if (Object.keys(cardConfig[label].reverseLinks).length !== 0 && Object.keys(cardConfig[label].reverseLinks).includes(key)) {\n        newKey = cardConfig[label].reverseLinks[key]\n        //console.log(\"1 LIST OF RELS:\", listOfRelationships, \"| KEY:\", key, \"| NODE: \", label)\n        //console.log(\"2 KEY: \", key, \"| NEW KEY:\", newKey, \"| reverseLinks: \", cardConfig[label].reverseLinks)\n      }\n      else {\n        newKey = key\n      }\n  \n          \n      return(\n        <ListItem key={key} style={{padding: '1px'}} button onClick={() => props.onButtonClick(keys, props.node.id)}>          \n          <ListItemText primary={translate(newKey, 'ru') + ' (' + listOfRelationships[key] + ')'} primaryTypographyProps={{variant:\"body2\"}} />\n          <ListItemIcon className={classes.listItemIcon}>\n            <AccountTreeIcon />\n          </ListItemIcon>\n        </ListItem>)\n    }\n  })\n\n\n  return (\n    <List\n      component=\"nav\"\n      aria-labelledby=\"nested-list-subheader\"\n      className={classes.root}\n    >\n      {listOfLinks}\n    </List>\n  );\n}\n\nconst areEqual = (prevProps, nextProps) => {\n  return ((prevProps.vGraph === nextProps.vGraph) && \n          (prevProps.iGraph === nextProps.iGraph) &&\n          (prevProps.node === nextProps.node));\n}\n\nexport default React.memo(NestedLinks, areEqual);","const shorten = (phrase) => {\n  const regex = new RegExp(\"общество с ограниченной ответственностью\", \"i\")\n  return phrase.replace(regex, \"ОсОО\")\n}\n\nexport default shorten;","const formatDate = (d) => {\n    let date = new Date(d)\n    let hours = date.getHours();\n    let minutes = date.getMinutes();\n    let time = hours + ':' + minutes\n    let day = date.getDate()\n    let month = date.getMonth() + 1\n    let year = date.getFullYear()\n\n    month = month < 10 ? '0' + month : month\n    day = day < 10 ? '0' + day : day\n\n    return day + \".\" + month + \".\" + year + \" \" + time \n  }\n\nexport default formatDate;","import React from 'react'\nimport Typography from '@material-ui/core/Typography';\nimport cardConfig from '../config'\nimport shorten from './utils/shorten'\nimport { makeStyles } from '@material-ui/core/styles';\nimport translate from '../Cards/utils/translate';\nimport formatDate from '../Cards/utils/formatDate';\n\nconst useStyles = makeStyles((theme) => ({\n    contentTextParam: {\n        fontWeight: \"bold\",\n        marginBottom: \"5px\"\n    }\n}));\n\nconst NestedProperties = (props) => {\n    const classes = useStyles();\n    let listOfProps = []\n    const label = props.node.labels[0]\n    if (Object.keys(cardConfig).includes(label)) {\n        cardConfig[label].properties.forEach(prop => {\n        if (cardConfig[label].properties \n                && cardConfig[label].properties.includes(prop)\n                && cardConfig[label].contentTextParam !== prop) {\n            listOfProps.push(\n                <Typography key={prop + label} variant=\"body2\" color=\"textPrimary\" component=\"p\">\n                    {prop === 'publication_date' ? translate(prop, 'ru') + ': ' + formatDate(props.node.properties[prop]) : translate(prop, 'ru') + ': ' +props.node.properties[prop] }\n                </Typography>\n            )\n        }\n        });\n    }\n    console.log( props.node.properties[cardConfig[label].contentTextParam] )\n    return (\n        <div>\n            <Typography className={classes.contentTextParam} variant=\"body2\" color=\"textPrimary\" component=\"p\" >\n                { shorten(props.node.properties[cardConfig[label].contentTextParam]) }\n            </Typography>\n        {listOfProps}\n        </div>\n    )\n}\nconst areEqual = (prevProps, nextProps) => {\n  return (prevProps.node.properties === nextProps.node.properties)\n}\n\nexport default React.memo(NestedProperties, areEqual);","import React, { useRef, useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\n\nimport MinimizeIcon from '@material-ui/icons/Minimize';\nimport Divider from '@material-ui/core/Divider'\n\nimport NestedLinks from './NestedLinks'\nimport NestedProperties from './NestedProperties'\nimport cardConfig from '../config'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      maxWidth: 240,\n      textAlign: \"left\",\n      height : \"auto\"\n    },\n    media: {\n      height: 0,\n      // paddingTop: '56.25%', // 16:9\n    },\n    expand: {\n      transform: 'rotate(0deg)',\n      marginLeft: 'auto',\n      transition: theme.transitions.create('transform', {\n        duration: theme.transitions.duration.shortest,\n      }),\n    },\n    expandOpen: {\n      transform: 'rotate(180deg)',\n    },\n    avatar: {\n      backgroundColor: red[500],\n    },\n    cardContent: {\n      paddingTop: 0,\n      paddingBottom: 0,\n      \"&:last-child\": {\n        paddingBottom: 7\n      }\n    },\n  }));\n\n  const RecipeReviewCard = (props) => {\n\n  const cardRef = useRef();\n  const [dimensions, setDimensions] = useState({ width:0, height: 0 });\n  props.getDimensions(dimensions.height, props.node.id)\n\n  useEffect(() => {\n    if (cardRef.current) {\n      setDimensions({\n        width: cardRef.current.offsetWidth * 10,\n        height: cardRef.current.offsetHeight * 10 + 20\n      });\n    }\n  }, []);\n    \n    const classes = useStyles();\n\n    let style = {}\n    let avatar = ''\n    let subheader = ''\n    if (Object.keys(cardConfig).includes(props.node.labels[0])) {\n      const label = props.node.labels[0]\n      style = cardConfig[label].style \n      avatar = cardConfig[label].icon \n      subheader =\n        <a \n          href={props.node.properties[cardConfig[label].subHeaderUrlParam]} \n          target=\"_blank\">{cardConfig[label].subHeaderText}\n        </a>\n    }\n    return (\n      <Card className={classes.root} ref={cardRef}>\n        <CardHeader\n          avatar={\n            <Avatar aria-label=\"recipe\" className={classes.avatar} style={style}>\n              {avatar}\n            </Avatar>\n          }\n          action={\n            <IconButton aria-label=\"settings\">\n              <MinimizeIcon onClick={() => props.onMinimizeClick(props.node.id)}/>\n            </IconButton>\n          }\n          subheader={<Typography>{subheader}</Typography>} \n        />\n        <CardContent classes={{root: classes.cardContent}} >\n          <NestedProperties node={props.node}/>\n          <Divider style={{marginTop: 8}} />\n          <NestedLinks\n            node={props.node}\n            vGraph={props.vGraph}\n            iGraph={props.iGraph}\n            onButtonClick={props.onButtonClick}  />\n        </CardContent>\n      </Card>\n    );\n  }\n  \n  const areEqual = (prevProps, nextProps) => {\n    return ((prevProps.vGraph === nextProps.vGraph) && \n            (prevProps.iGraph === nextProps.iGraph)); //&&\n            //(prevProps.node === nextProps.node));\n  }\n  \n  export default React.memo(RecipeReviewCard, areEqual);","import React, { useState, useEffect, useRef } from \"react\";\nimport {Graph} from \"react-d3-graph\";\nimport Card from '../Cards/Card';\nimport CardConfig from '../config';\nimport translate from '../Cards/utils/translate';\nimport shorten from '../Cards/utils/shorten';\nimport {relationshipConfig} from '../config';\n\nconst objNode = {}\nconst MGraph = (props) => {\n  const [dim, setDim] = useState({}) // DO NOT DELETE\n\n  const displayGraph = (props) => {\n    const dispGraph = {\n      nodes: Object.values(props.visibleGraph.toJS().nodes),\n      links: Object.values(props.visibleGraph.toJS().edges),\n    }\n\n    let cardNodeIds = props.cardNodeIds.toJS()\n    //console.log('mgraph card nodes: ', cardNodeIds)\n    dispGraph.nodes = dispGraph.nodes.map((node) => {\n      // if node.id is in array, apply viewGenerator\n      if (cardNodeIds.includes(node.id)) {\n        \n        node.fontSize = 16\n        node.dispLabel = \" \"\n        node.viewGenerator = (n) => {\n          const getDimensions = (dim, id) => {\n             setDim(dim)\n             objNode[id] = dim\n          }\n          return <Card\n            node={n}\n            getDimensions={getDimensions}\n            vGraph={props.visibleGraph}\n            iGraph={props.invisibleGraph}\n            onButtonClick={props.onButtonClick}\n            onMinimizeClick={props.onMinimizeClick}/>\n        }\n      } else { // else return SVG icon\n        node.svg = CardConfig[node.labels[0]].svg\n        node.size = 600\n        node.fontSize = 16\n        node.highlightFontSize = 24\n        node.dispLabel = shorten(node.properties[CardConfig[node.labels[0]].contentTextParam])\n      }\n\n      return node\n    })\n\n    ///// Dynamic height\n    dispGraph.nodes = dispGraph.nodes.map((node) => {\n      if (cardNodeIds.includes(node.id)) {\n        node.size = {\n          height: objNode[node.id],\n          width: 2400\n        }\n      }\n      if (props.newCoords && props.newCoords.hasOwnProperty(node.id)) {\n        node.x = props.newCoords[node.id].x\n        node.y = props.newCoords[node.id].y\n      }\n      return node\n    })\n    ////\n\n    dispGraph.links = dispGraph.links.map((clearLink) => {\n\n      const link = {...clearLink, ...relationshipConfig[clearLink.type].linkConf}\n\n      // if PARTICIPATED_IN.properties not empty\n      if (relationshipConfig[link.type].properties.length !== 0) {\n\n        relationshipConfig[link.type].result.forEach(conf => {\n          // if node.result in value AND regex=true\n          if (conf.value.toLowerCase().includes(link.properties.result.substring(0, 7).toLowerCase()) && conf.regex) {\n            link.color = conf.color\n          } else {\n            console.log(\"LINK NOT RED\")\n          }\n        });\n\n        let label = ''\n        for (let value of Object.values((relationshipConfig[link.type].properties))) { // for [proposed_price, result]\n          label = label + link.properties[value] + ' '\n        }\n        link.dispLabel = label\n      }\n      // if PARTICIPATED_IN.properties IS empty\n      else {\n        link.dispLabel = translate(link.type, 'ru')\n      }\n      return link\n    })\n\n\n    /* DO NOT DELETE\n\n    if (Object.keys(link.properties).length !== 0) {\n       link.label = Object.values(link.properties).join(\" \")\n    }\n    else {\n     link.label = translate(link.type, 'ru')\n   }\n    console.log('LINK', link)\n    return link\n  }) */\n\n    return dispGraph\n  };\n\n  const [windowHeight, setWindowHeight] = useState(window.innerHeight - 110);\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowHeight(window.innerHeight - 110);\n      setWindowWidth(window.innerWidth)\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  const myConfig = {\n    height: windowHeight,\n    width: windowWidth,\n    staticGraphWithDragAndDrop: props.newCoords ? true : false,\n    //height: 1000,\n    //width: 1000,\n    // staticGraphWithDragAndDrop: true,\n    // nodeHighlightBehavior: true,\n    node: {\n      labelProperty: \"dispLabel\",\n      fontSize: 14\n    },\n    //   color: \"lightgreen\",\n    //   labelProperty: 'label',\n    //   highlightStrokeColor: \"blue\",\n    //   size: 3300,\n    //   fontSize: 16\n    //\n    //\n    // }\n    // ,\n    \"d3\": {\n      \"alphaTarget\": 0.05,\n      \"gravity\": -100,\n      \"linkLength\": 100,\n      \"linkStrength\": 1,\n      \"disableLinkForce\": false\n    },\n    link: {\n      highlightColor: \"lightblue\",\n      renderLabel: true,\n      labelProperty: 'dispLabel'\n\n    },\n  };\n\n  const graphRef = useRef()\n\n  useEffect(()=> {\n    handlePosChange()\n  })\n\n  const handlePosChange = () => {\n    let nodes = graphRef.current.state.nodes\n    let coords = {}\n    for (const [key, value] of Object.entries(nodes)) {\n      coords[key] = {x: value.x, y: value.y}\n    }\n    props.returnCoords(coords)\n  }\n\n  return <Graph\n  ref={graphRef}\n    config={myConfig}\n    id=\"d3graph\" // id is mandatory, if no id is defined rd3g will throw an error\n    data={displayGraph(props)}\n    onNodePositionChange={(nodeId, x, y) => {\n      handlePosChange()\n    }}\n    onDoubleClickNode={(nodeId) => {\n      props.onNodeClick(nodeId)\n    }}\n  />\n}\n\nconst areEqual = (prevProps, nextProps) => {\n  return (prevProps.visibleGraph === nextProps.visibleGraph)\n    && (prevProps.invisibleGraph === nextProps.invisibleGraph)\n    && (prevProps.cardNodeIds === nextProps.cardNodeIds)\n}\n\nexport default React.memo(MGraph, areEqual);\n\n","\nexport function toGraph(result, graph) {\n    result.records.forEach((records, i) => {\n        records.keys.forEach((key) => {\n            const nodge = records.get(key)\n            if (nodge.hasOwnProperty('start')) { //Check if it is edge\n                graph.edges[nodge.identity.low] = {\n                    source: nodge.start.low,\n                    target: nodge.end.low,\n                    type: nodge.type,\n                    properties: nodge.properties\n                }\n            } else {\n                graph.nodes[nodge.identity.low] = {\n                    id: nodge.identity.low,\n                    labels: nodge.labels,\n                    properties: nodge.properties\n                }\n            }\n        })\n    })\n    return graph;\n}\nexport function reconcileGraphs(vGraph, iGraph) {\n    Object.keys(iGraph.edges).forEach((key) => {\n        if (Object.keys(vGraph.nodes).includes(iGraph.edges[key].source.toString()) &&\n            Object.keys(vGraph.nodes).includes(iGraph.edges[key].target.toString())) {\n            vGraph.edges[key] = iGraph.edges[key]\n        }\n    })\n    return vGraph\n}\n","import React, { Component } from 'react';\n\nimport neo4j from 'neo4j-driver'\nimport Immutable from 'immutable'\n\nimport './my-svg.svg'\nimport MGraph from \"../MGraph/MGraph\";\nimport * as gh from './graphHelpers.js'\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Grid, Typography, Box } from '@material-ui/core';\n\nclass GraphComponent extends Component{\n\n  driver = neo4j.driver('bolt://neo4j.kloop.io:7687')\n\n  state = {\n    visibleGraph: Immutable.fromJS({nodes: {}, edges: {}}),\n    invisibleGraph: Immutable.fromJS({nodes: {}, edges: {}}),\n    cardNodeIds: Immutable.fromJS([9350, 18766, 371947]),\n    showSpinner: false,\n    showSmallSpinner: false\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.isGoClick !== this.props.isGoClick) {\n      this.goClick(this.props.cypherQuery)\n      this.props.goClick()\n    }\n    if (prevProps.isClearGraph !== this.props.isClearGraph) {\n      this.clearGraphs()\n      this.props.clearClick()\n    }\n  }\n\n  clearGraphs = () => {\n    this.setState({visibleGraph: Immutable.fromJS({nodes: {}, edges: {}}),\n                   invisibleGraph: Immutable.fromJS({nodes: {}, edges: {}})})\n  }\n\n  goClick = (query) => {\n    this.props.errorMessage('')\n    this.executeQuery(query)\n  }\n\n  executeQuery = (cypherQuery) => {\n    this.setState({showSpinner: true})\n    const session = this.driver.session()\n    session\n      .run(cypherQuery)\n      .then(result => {\n        let updatedVisibleGraph = gh.toGraph(result, this.state.visibleGraph.toJS())\n        const paramIDs = Object.keys(updatedVisibleGraph.nodes).toString()\n        this.setState({\n          visibleGraph: Immutable.fromJS(updatedVisibleGraph)\n        })\n        this.updateInvisible(paramIDs, updatedVisibleGraph, this.state.invisibleGraph.toJS()) \n      })\n      .catch(error => {\n        console.log(error)\n        this.props.errorMessage('Произошла ошибка во время выполнения запроса')\n      })\n      .then(() => {\n        session.close()\n        this.setState({showSpinner: false})\n      })\n\n  }\n\n  updateInvisible = (paramIDs, updatedVisibleGraph, invisibleGraph) => {\n    this.setState({showSmallSpinner: true})\n    const invisibleSession = this.driver.session()\n    invisibleSession\n      .run(\"MATCH (n)-[r]-(b) WHERE ID(n) in [\"+ paramIDs +\"] RETURN n, r, b\")\n      .then(result => {\n        const updatedInvisibleGraph = gh.toGraph(result,\n          invisibleGraph)\n        updatedVisibleGraph = gh.reconcileGraphs(updatedVisibleGraph,\n          updatedInvisibleGraph)\n        this.setState({\n          visibleGraph: Immutable.fromJS(updatedVisibleGraph),\n          invisibleGraph: Immutable.fromJS(updatedInvisibleGraph)\n        })\n      })\n      .catch(error => {\n        console.log(error)\n        this.props.errorMessage('Произошла ошибка при обработке связей')\n      })\n      .then(() => {\n        invisibleSession.close()\n        this.setState({showSmallSpinner: false})\n      })\n  }\n\n  mergeGraphs = (ids, vGraph, iGraph) => {\n    ids.forEach((id) => {\n      vGraph.edges[id] = iGraph.edges[id]\n      vGraph.nodes[vGraph.edges[id].source] = iGraph.nodes[iGraph.edges[id].source] \n      vGraph.nodes[vGraph.edges[id].target] = iGraph.nodes[iGraph.edges[id].target] \n    })\n    let updatedVisibleGraph = gh.reconcileGraphs(vGraph, iGraph)\n    this.updateInvisible(ids, updatedVisibleGraph, this.state.invisibleGraph.toJS())\n    updatedVisibleGraph = gh.reconcileGraphs(updatedVisibleGraph, this.state.invisibleGraph.toJS())\n    return updatedVisibleGraph\n  }\n\n  findNodes(nodes, edges, edgeIds, nodeKey) {\n    const foundNodes = {} \n    Object.keys(nodes).forEach(nodeKey => {\n      edgeIds.forEach(edgeId => {\n        if (nodes[nodeKey].id === edges[edgeId].source || nodes[nodeKey].id === edges[edgeId].target){\n          foundNodes[nodeKey] = nodes[nodeKey]\n        }\n      })\n    }) \n    return foundNodes\n  }\n\n  removeElements = (ids, nodeKey, vGraph, iGraph) => {\n    const innocentNodes = this.findNodes(vGraph.nodes, vGraph.edges, ids)\n    ids.forEach((id) => {\n      let direction = 'target'\n      let nodeToRemove = vGraph.nodes[vGraph.edges[id][direction]]\n      if (nodeToRemove.id === parseInt(nodeKey)){\n        direction = 'source'\n        nodeToRemove = vGraph.nodes[vGraph.edges[id][direction]]\n      }\n      \n      if (!Object.keys(innocentNodes).includes(String(nodeToRemove.id))){\n        delete vGraph.nodes[vGraph.edges[id][direction]]\n        delete vGraph.edges[id]\n      }\n      // delete iGraph.nodes[iGraph.edges[id].source]\n      // delete iGraph.nodes[iGraph.edges[id].target]\n      // delete iGraph.edges[id]\n    })\n    console.log('remove vGraph result: ', vGraph)\n    return [vGraph, iGraph]\n  }\n\n  handleButtonClick = (ids, nodeKey) => {\n    const edges = Object.keys(this.state.visibleGraph.toJS().edges)\n    let visibleGraph = this.state.visibleGraph.toJS()\n    let invisibleGraph = this.state.invisibleGraph.toJS()\n    let updatedVisibleGraph = null\n    // if ids are already in visible graph\n    // if (ids.every(el => edges.includes(el))) {\n    //   const graphs = this.removeElements(ids, nodeKey, visibleGraph, invisibleGraph)\n    //   updatedVisibleGraph = graphs[0]\n    //   // ids = edges.filter(el => !ids.includes(el))\n    // } else {\n      updatedVisibleGraph = this.mergeGraphs(ids, visibleGraph, invisibleGraph)\n    // }\n      const nodes = this.findNodes(updatedVisibleGraph.nodes, updatedVisibleGraph.edges, ids)\n      this.updateInvisible(Object.keys(nodes), updatedVisibleGraph, invisibleGraph)\n    console.log('updated visible graph: ', updatedVisibleGraph)\n    this.setState({visibleGraph: Immutable.fromJS(updatedVisibleGraph)})\n  }\n\n  removeFromArray = (nodeId) => {\n    let cardNodeIds = this.state.cardNodeIds.toJS()\n    const idIndex = cardNodeIds.indexOf(parseInt(nodeId))\n    if (idIndex > -1) {\n      cardNodeIds.splice(idIndex, 1)\n    }\n    return cardNodeIds\n  }\n\n  addToArray = (nodeId) => {\n    let cardNodeIds = this.state.cardNodeIds.toJS()\n    const idIndex = cardNodeIds.indexOf(parseInt(nodeId))\n    if (idIndex === -1) {\n      cardNodeIds.push(parseInt(nodeId))\n    }\n    return cardNodeIds\n  }\n\n  handleMinimezeClick = (nodeId) => {\n    console.log('minimize clicked', nodeId)\n    const cardNodeIds = this.removeFromArray(nodeId)\n    this.setState({cardNodeIds: Immutable.fromJS(cardNodeIds)})\n  }\n\n  handleNodeClick = (nodeId) => {\n    console.log('node clicked', nodeId)\n    if (!this.state.cardNodeIds.toJS().includes(parseInt(nodeId))){\n      const cardNodeIds = this.addToArray(nodeId)\n      this.setState({cardNodeIds: Immutable.fromJS(cardNodeIds)})\n    }\n  }\n\n  returnSpinner = () => {\n    return (\n    <div style = {{\n      position: 'absolute',\n      height: '100px',\n      width: '100px',\n      top: '50%',\n      left: '50%',\n      marginLeft: '-50px',\n      marginTop: '-50px',\n      }}>\n      <CircularProgress size={100} style={{color: 'grey'}}/>\n    </div>\n    )\n  }\n\n  returnSmallSpinner = () => {\n    return (\n      <Grid container alignContent=\"flex-end\" direction=\"column\" style={{position:\"absolute\", right:0,paddingRight: \"10px\"}}>\n        <Box>\n          <CircularProgress size={32} style={{color: 'grey'}}/>\n        </Box>\n        <Typography variant=\"body2\" component=\"p\" style={{fontSize: \"12px\"}}>Cвязи загружаются</Typography>\n      </Grid>\n    )\n  }\n\n  render() {\n    let graph = null\n    if (Object.keys(this.state.visibleGraph.toJS().nodes).length !== 0) {\n      graph = <MGraph \n        onButtonClick={this.handleButtonClick}\n        onMinimizeClick={this.handleMinimezeClick}\n        onNodeClick={this.handleNodeClick}\n        visibleGraph={this.state.visibleGraph}\n        invisibleGraph={this.state.invisibleGraph}\n        cardNodeIds={this.state.cardNodeIds}\n        returnCoords={this.props.returnCoords}\n        newCoords={this.props.newCoords}\n        />\n    }\n    return(\n      <div>\n        {this.state.showSmallSpinner ? this.returnSmallSpinner(): null}\n        {this.state.showSpinner ? this.returnSpinner() : graph}\n      </div>\n    )\n  }\n\n}\n\nexport default GraphComponent","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport LoopIcon from '@material-ui/icons/Loop';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport SearchIcon from '@material-ui/icons/Search';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport Tooltip from '@material-ui/core/Tooltip'\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    background: 'transparent',\n    boxShadow: 'none',\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    color: 'gray',\n    marginRight: theme.spacing(2),\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n  searchBar: {\n    width: '600px', \n    paddingLeft: 13, \n    paddingRight: 13,\n    border: '2px solid gray', \n    borderRadius: 25,\n  },\n}));\n\nexport default function PersistentDrawerLeft(props) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, open && classes.hide)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <TextField\n          style={{color: 'grey'}}\n          className={classes.searchBar}\n          value={props.searchText}\n          onChange={props.handleSearchTextChange}\n          placeholder=\"Поиск...\"\n          onKeyPress = {(event) => {\n            if (event.key === 'Enter') {\n              props.handleGoClick();\n            }\n          }}\n          InputProps={{\n            disableUnderline: true,\n            inputProps: {\n              'aria-label': \"Search\"\n            }\n          }}\n        />\n        <Tooltip title=\"Поиск\">\n          <IconButton aria-label=\"search\" onClick={props.handleGoClick}>\n            <SearchIcon />\n          </IconButton>\n        </Tooltip>\n        {/* <Tooltip title=\"Обновить\">\n          <IconButton aria-label=\"reset\" onClick={props.handleResetClick}>\n            <LoopIcon />\n          </IconButton>\n        </Tooltip> */}\n        <Tooltip title=\"Очистить\">\n          <IconButton aria-label=\"clear\" onClick={props.handleClearClick}>\n            <ClearIcon />\n          </IconButton>\n        </Tooltip>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={open}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n        {['Введите запрос:'].map((text, index) => (\n          <ListItem key={text}>\n            <ListItemText primary={text} />\n          </ListItem>\n          \n        ))}\n      </List>\n      <List>\n          <TextField\n           id=\"query\"\n           label=\"Запрос\"\n           variant=\"outlined\" \n           multiline\n           value={props.cypherQuery}\n           onChange={props.handleCypherQueryTextChange} />\n      </List>\n      <List>\n        <Button variant=\"contained\"\n                className={classes.GoButton}\n                onClick={props.handleGoClick}\n                startIcon={<PlayArrowIcon />}>Поиск</Button>\n      </List>\n      <List>\n          <TextField\n           id=\"coords\"\n           label=\"Координаты\"\n           variant=\"outlined\" \n           multiline\n           value={JSON.stringify(props.nodeCoords)}/>\n      </List>\n      </Drawer>\n      <main style={{padding: 0, height: '100%'}}\n        className={clsx(classes.content, {\n          [classes.contentShift]: open,\n        })}\n      >\n        <div className={classes.drawerHeader} />\n        {props.children}\n      </main>\n    </div>\n  );\n}\n","import React, { Component } from 'react';\nimport './App.css';\nimport './my-svg.svg'\nimport GraphComponent from './components/GraphComponent'\nimport Pagination from '@material-ui/lab/Pagination';\nimport queryString from 'query-string'\nimport AppSideBar from './SideBar/AppSideBar'\nimport Grid from '@material-ui/core/Grid'\n\nconst axios = require('axios').default;\n\nclass App extends Component {\n\n  state = {\n    cypherQuery: \"MATCH (n) where id(n) in [2437183, 18766, 2460290, 371947, 9350, 2437735, 1150073] return n\",\n    searchText: \"\",\n    goClick: false,\n    clearGraph: false,\n    listOfNodes: [],\n    showPagination: false,\n    errorMessage: '',\n    newCoords: null,\n    coords: {}\n  }\n\n  componentDidMount() { \n    let urlString =  queryString.parse(window.location.search, {decode: false})\n    let query = ''\n    console.log(\"URL STRING\", urlString)\n    if (urlString.nodes) {\n      query = \"MATCH (n) where id(n) in [\" + urlString.nodes + \"] return n\"\n      console.log(\"NODES\", query)\n      this.setState({cypherQuery: query})\n      this.handleGoClick()\n    }\n    else if (urlString.url) {\n      console.log(\"urlString\", urlString)\n      this.fetchData(urlString)\n    }\n    else if (urlString.coords) {\n      let dec = decodeURI(urlString.coords);\n      let obj = JSON.parse(dec)\n      console.log(obj)\n      let ids = Object.keys(obj)\n      query = \"MATCH (n) where id(n) in [\" + ids + \"] return n\"\n      this.setState({newCoords: obj})\n      this.setState({cypherQuery: query})\n      this.handleGoClick()\n    }\n  }\n\n  handleCypherQueryTextChange = (event) => {\n    this.setState({cypherQuery: event.target.value})\n  }\n\n  handleSearchTextChange = (event) => {\n    let query = \"MATCH (n) where n.text_search =~ '.*\" + event.target.value.toLowerCase() + \".*' return n\"\n    this.setState({searchText: event.target.value, cypherQuery: query})\n  }\n\n  handlePaginationChange = (event, value) => {\n    this.handleClearClick()\n    let nodes = this.state.listOfNodes[value - 1]\n    let query = \"MATCH (n) where id(n) in [\" + nodes.join() + \"] return n\"\n    this.setState({cypherQuery: query})\n    this.handleGoClick()\n  }\n\n  fetchData = (urlString) => {\n    axios.get(urlString.url, {\n      params: {\n        token: urlString.token\n      }\n    })\n    .then(response => {\n      // handle success\n      console.log(response);\n      let query = \"MATCH (n) where id(n) in [\" + response.data[0].join() + \"] return n\"\n      console.log(query)\n      this.setState({listOfNodes: response.data, showPagination: true, cypherQuery: query})\n      this.handleGoClick()\n    })\n    .catch(error => {\n      // handle error\n      this.setState({errorMessage: 'Произошла ошибка при запросе данных. Проверье интернет-соединение' })\n      console.log('There has been a problem with your fetch operation: ' + error.message);\n    })\n  }\n\n  handleGoClick = () => {\n    this.setState({goClick: true});\n    console.log('go button clicked')\n    console.log('state goClicked ', this.state.goClick)\n  }\n\n  goClick = () => {\n    this.setState({goClick: false})\n  }\n\n  handleClearClick = () => {\n    this.setState({clearGraph: true})\n  }\n\n  clearClick = () => {\n    this.setState({clearGraph: false})\n  }\n\n  handleResetClick = () => {\n    this.handleClearClick()\n    this.handleGoClick()\n  }\n  handleError = (errorMessage) => {\n    this.setState({errorMessage: errorMessage})\n  }\n\n  returnPagination = () => {\n    return (\n      <Grid container justify=\"center\" style={{\n        position: 'absolute',\n        left: '50%',\n        bottom: '10px',\n        WebkitTransform: 'translateX(-50%)',\n        transform: 'translateX(-50%)'\n        }} >\n      <Pagination count={this.state.listOfNodes.length} onChange={this.handlePaginationChange} size=\"small\" showFirstButton showLastButton />\n    </Grid>\n    )\n  }\n\n  returnCoords = (obj) => {\n    this.setState({coords: obj})\n  }\n  \n  render() {\n    return(\n      <div className='App'>\n        <AppSideBar \n          cypherQuery={this.state.cypherQuery}\n          handleCypherQueryTextChange={this.handleCypherQueryTextChange}\n          searchText={this.state.searchText}\n          handleSearchTextChange={this.handleSearchTextChange}\n          handleGoClick={this.handleGoClick} \n          // handleResetClick={this.handleResetClick}\n          handleClearClick={this.handleClearClick}\n          nodeCoords={this.state.coords}\n          >\n          {this.state.errorMessage &&\n            <h3 className=\"error\"> { this.state.errorMessage } </h3> }\n          <GraphComponent \n            cypherQuery={this.state.cypherQuery}\n            isGoClick={this.state.goClick}\n            goClick={this.goClick}\n            isClearGraph={this.state.clearGraph}\n            clearClick={this.clearClick}\n            errorMessage={this.handleError}\n            returnCoords={this.returnCoords}\n            newCoords={this.state.newCoords}\n            />\n            {this.state.showPagination? this.returnPagination() : null}\n        </AppSideBar>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}